Script started on 2022-02-03 15:28:00-05:00 [TERM="xterm" TTY="/dev/pts/2" COLUMNS="117" LINES="62"]
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ s[Kcd ~/o471a[K[K[K[K[Ki471a/submit/lab1/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ script -[K[K[K[K[K[K[K[Kgit add .
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ git commit [K[K[K[K[K[K[K[K[K[K[Kcp -pr ~/cs471/lab1/la[K[K[K[Ks/labM[KN/e[Kex[K[K[K[K1.[K/ e[K[Kexercises .
[?2004lcp: cannot stat '/home/cmcborr1/cs471/labs/lab1/exercises': No such file or directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ cs /[K[K[Kd cs4[K[K[K~/cs41[K17[K[K71
[?2004l[?2004hcmcborr1@remote02:~/cs471$ ;s[K[Kgit pull
[?2004lThere is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> lab1

[?2004hcmcborr1@remote02:~/cs471$ git pull origin
[?2004lfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004hcmcborr1@remote02:~/cs471$ c[Kgit pull amin
[?2004lfatal: 'amin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004hcmcborr1@remote02:~/cs471$ c[Kgit pull cs471
[?2004lfatal: 'cs471' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004hcmcborr1@remote02:~/cs471$ cd [K~[K ~/cs5471[K[K[K[K[K[Ki471a
[?2004l[?2004hcmcborr1@remote02:~/i471a$ ;s[K[Kls
[?2004lREADME.md  submit
[?2004hcmcborr1@remote02:~/i471a$ cd sin,ot
[?2004lbash: cd: sin,ot: No such file or directory
[?2004hcmcborr1@remote02:~/i471a$ cd submit/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit$ ls
[?2004llab0  lab1
[?2004hcmcborr1@remote02:~/i471a/submit$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a$ ls
[?2004lREADME.md  submit
[?2004hcmcborr1@remote02:~/i471a$ git up[K[Kpu;l[K[Kll
[?2004lUsername for 'https://github.com': christianmcborrough@gmail.com
Password for 'https://christianmcborrough@gmail.com@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/macman926/i471a.git/'
[?2004hcmcborr1@remote02:~/i471a$ git pull
[?2004lUsername for 'https://github.com': christianmcborrough@gmail.com
Password for 'https://christianmcborrough@gmail.com@github.com': 
Already up to date.
[?2004hcmcborr1@remote02:~/i471a$ ls
[?2004lREADME.md  submit
[?2004hcmcborr1@remote02:~/i471a$ cd ..
[?2004l[?2004hcmcborr1@remote02:~$ ls[K[Kcd ..[3Plsgit pullls[Kcd ..[3Plscd submit/[1Pin,otls[Kcd ~/i471a
[?2004l[?2004hcmcborr1@remote02:~/i471a$ cd ~/i471a[Kls
[?2004lREADME.md  submit
[?2004hcmcborr1@remote02:~/i471a$ cd submit/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit$ cd [K[K[Kls
[?2004llab0  lab1
[?2004hcmcborr1@remote02:~/i471a/submit$ cd lab0/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab0$ ls
[?2004llab0.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab0$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit$ ls
[?2004llab0  lab1
[?2004hcmcborr1@remote02:~/i471a/submit$ cd lab1/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ ls
[?2004llab1.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ cd .. 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit$ cd[K[Kcd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a$ ls
[?2004lREADME.md  submit
[?2004hcmcborr1@remote02:~/i471a$ cd ..
[?2004l[?2004hcmcborr1@remote02:~$ l[Kcd ~/cs471/
[?2004l[?2004hcmcborr1@remote02:~/cs471$ ls
[?2004llab1
[?2004hcmcborr1@remote02:~/cs471$ git  p[K[K[K pull
[?2004lThere is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> lab1

[?2004hcmcborr1@remote02:~/cs471$ git branch -;[Kl
[?2004l[?1h=[K[?1l>[?2004hcmcborr1@remote02:~/cs471$ cd ~/projects/cs471/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471$ ls
[?2004lannounce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
[?2004hcmcborr1@remote02:~/projects/cs471$ cd d..[K[K[K[K[K[Kcd ~/cs471/
[?2004l[?2004hcmcborr1@remote02:~/cs471$ ls
[?2004llab1
[?2004hcmcborr1@remote02:~/cs471$ cd[K[Kls
[?2004llab1
[?2004hcmcborr1@remote02:~/cs471$ cd ~/projects/cs471/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471$ ls
[?2004lannounce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
[?2004hcmcborr1@remote02:~/projects/cs471$ cd r[Kprojects/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/projects$ ls
[?2004lindex.html  index.umt
[?2004hcmcborr1@remote02:~/projects/cs471/projects$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471$ ls[K[Kls
[?2004lannounce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
[?2004hcmcborr1@remote02:~/projects/cs471$ cd labs/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs$ ls
[?2004lindex.html  index.umt  lab0  start-me-up  working
[?2004hcmcborr1@remote02:~/projects/cs471/labs$ cd[K [K[Kcd lab0
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab0$ ls
[?2004lstart-me-up  start-me-up.html  start-me-up.pdf	start-me-up.umt
[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab0$ cd[K[Kcd ..
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs$ ls
[?2004lindex.html  index.umt  lab0  start-me-up  working
[?2004hcmcborr1@remote02:~/projects/cs471/labs$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471$ git pull
[?2004lcmcborr1@remote01.cs.binghamton.edu's password: 
Permission denied, please try again.
cmcborr1@remote01.cs.binghamton.edu's password: 
Permission denied, please try again.
cmcborr1@remote01.cs.binghamton.edu's password: 
cmcborr1@remote01.cs.binghamton.edu: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004hcmcborr1@remote02:~/projects/cs471$ git pull
[?2004lcmcborr1@remote01.cs.binghamton.edu's password: 
remote: Enumerating objects: 160, done.[K
remote: Counting objects:   0% (1/160)[Kremote: Counting objects:   1% (2/160)[Kremote: Counting objects:   2% (4/160)[Kremote: Counting objects:   3% (5/160)[Kremote: Counting objects:   4% (7/160)[Kremote: Counting objects:   5% (8/160)[Kremote: Counting objects:   6% (10/160)[Kremote: Counting objects:   7% (12/160)[Kremote: Counting objects:   8% (13/160)[Kremote: Counting objects:   9% (15/160)[Kremote: Counting objects:  10% (16/160)[Kremote: Counting objects:  11% (18/160)[Kremote: Counting objects:  12% (20/160)[Kremote: Counting objects:  13% (21/160)[Kremote: Counting objects:  14% (23/160)[Kremote: Counting objects:  15% (24/160)[Kremote: Counting objects:  16% (26/160)[Kremote: Counting objects:  17% (28/160)[Kremote: Counting objects:  18% (29/160)[Kremote: Counting objects:  19% (31/160)[Kremote: Counting objects:  20% (32/160)[Kremote: Counting objects:  21% (34/160)[Kremote: Counting objects:  22% (36/160)[Kremote: Counting objects:  23% (37/160)[Kremote: Counting objects:  24% (39/160)[Kremote: Counting objects:  25% (40/160)[Kremote: Counting objects:  26% (42/160)[Kremote: Counting objects:  27% (44/160)[Kremote: Counting objects:  28% (45/160)[Kremote: Counting objects:  29% (47/160)[Kremote: Counting objects:  30% (48/160)[Kremote: Counting objects:  31% (50/160)[Kremote: Counting objects:  32% (52/160)[Kremote: Counting objects:  33% (53/160)[Kremote: Counting objects:  34% (55/160)[Kremote: Counting objects:  35% (56/160)[Kremote: Counting objects:  36% (58/160)[Kremote: Counting objects:  37% (60/160)[Kremote: Counting objects:  38% (61/160)[Kremote: Counting objects:  39% (63/160)[Kremote: Counting objects:  40% (64/160)[Kremote: Counting objects:  41% (66/160)[Kremote: Counting objects:  42% (68/160)[Kremote: Counting objects:  43% (69/160)[Kremote: Counting objects:  44% (71/160)[Kremote: Counting objects:  45% (72/160)[Kremote: Counting objects:  46% (74/160)[Kremote: Counting objects:  47% (76/160)[Kremote: Counting objects:  48% (77/160)[Kremote: Counting objects:  49% (79/160)[Kremote: Counting objects:  50% (80/160)[Kremote: Counting objects:  51% (82/160)[Kremote: Counting objects:  52% (84/160)[Kremote: Counting objects:  53% (85/160)[Kremote: Counting objects:  54% (87/160)[Kremote: Counting objects:  55% (88/160)[Kremote: Counting objects:  56% (90/160)[Kremote: Counting objects:  57% (92/160)[Kremote: Counting objects:  58% (93/160)[Kremote: Counting objects:  59% (95/160)[Kremote: Counting objects:  60% (96/160)[Kremote: Counting objects:  61% (98/160)[Kremote: Counting objects:  62% (100/160)[Kremote: Counting objects:  63% (101/160)[Kremote: Counting objects:  64% (103/160)[Kremote: Counting objects:  65% (104/160)[Kremote: Counting objects:  66% (106/160)[Kremote: Counting objects:  67% (108/160)[Kremote: Counting objects:  68% (109/160)[Kremote: Counting objects:  69% (111/160)[Kremote: Counting objects:  70% (112/160)[Kremote: Counting objects:  71% (114/160)[Kremote: Counting objects:  72% (116/160)[Kremote: Counting objects:  73% (117/160)[Kremote: Counting objects:  74% (119/160)[Kremote: Counting objects:  75% (120/160)[Kremote: Counting objects:  76% (122/160)[Kremote: Counting objects:  77% (124/160)[Kremote: Counting objects:  78% (125/160)[Kremote: Counting objects:  79% (127/160)[Kremote: Counting objects:  80% (128/160)[Kremote: Counting objects:  81% (130/160)[Kremote: Counting objects:  82% (132/160)[Kremote: Counting objects:  83% (133/160)[Kremote: Counting objects:  84% (135/160)[Kremote: Counting objects:  85% (136/160)[Kremote: Counting objects:  86% (138/160)[Kremote: Counting objects:  87% (140/160)[Kremote: Counting objects:  88% (141/160)[Kremote: Counting objects:  89% (143/160)[Kremote: Counting objects:  90% (144/160)[Kremote: Counting objects:  91% (146/160)[Kremote: Counting objects:  92% (148/160)[Kremote: Counting objects:  93% (149/160)[Kremote: Counting objects:  94% (151/160)[Kremote: Counting objects:  95% (152/160)[Kremote: Counting objects:  96% (154/160)[Kremote: Counting objects:  97% (156/160)[Kremote: Counting objects:  98% (157/160)[Kremote: Counting objects:  99% (159/160)[Kremote: Counting objects: 100% (160/160)[Kremote: Counting objects: 100% (160/160), done.[K
remote: Compressing objects:   0% (1/132)[Kremote: Compressing objects:   1% (2/132)[Kremote: Compressing objects:   2% (3/132)[Kremote: Compressing objects:   3% (4/132)[Kremote: Compressing objects:   4% (6/132)[Kremote: Compressing objects:   5% (7/132)[Kremote: Compressing objects:   6% (8/132)[Kremote: Compressing objects:   7% (10/132)[Kremote: Compressing objects:   8% (11/132)[Kremote: Compressing objects:   9% (12/132)[Kremote: Compressing objects:  10% (14/132)[Kremote: Compressing objects:  11% (15/132)[Kremote: Compressing objects:  12% (16/132)[Kremote: Compressing objects:  13% (18/132)[Kremote: Compressing objects:  14% (19/132)[Kremote: Compressing objects:  15% (20/132)[Kremote: Compressing objects:  16% (22/132)[Kremote: Compressing objects:  17% (23/132)[Kremote: Compressing objects:  18% (24/132)[Kremote: Compressing objects:  19% (26/132)[Kremote: Compressing objects:  20% (27/132)[Kremote: Compressing objects:  21% (28/132)[Kremote: Compressing objects:  22% (30/132)[Kremote: Compressing objects:  23% (31/132)[Kremote: Compressing objects:  24% (32/132)[Kremote: Compressing objects:  25% (33/132)[Kremote: Compressing objects:  26% (35/132)[Kremote: Compressing objects:  27% (36/132)[Kremote: Compressing objects:  28% (37/132)[Kremote: Compressing objects:  29% (39/132)[Kremote: Compressing objects:  30% (40/132)[Kremote: Compressing objects:  31% (41/132)[Kremote: Compressing objects:  32% (43/132)[Kremote: Compressing objects:  33% (44/132)[Kremote: Compressing objects:  34% (45/132)[Kremote: Compressing objects:  35% (47/132)[Kremote: Compressing objects:  36% (48/132)[Kremote: Compressing objects:  37% (49/132)[Kremote: Compressing objects:  38% (51/132)[Kremote: Compressing objects:  39% (52/132)[Kremote: Compressing objects:  40% (53/132)[Kremote: Compressing objects:  41% (55/132)[Kremote: Compressing objects:  42% (56/132)[Kremote: Compressing objects:  43% (57/132)[Kremote: Compressing objects:  44% (59/132)[Kremote: Compressing objects:  45% (60/132)[Kremote: Compressing objects:  46% (61/132)[Kremote: Compressing objects:  47% (63/132)[Kremote: Compressing objects:  48% (64/132)[Kremote: Compressing objects:  49% (65/132)[Kremote: Compressing objects:  50% (66/132)[Kremote: Compressing objects:  51% (68/132)[Kremote: Compressing objects:  52% (69/132)[Kremote: Compressing objects:  53% (70/132)[Kremote: Compressing objects:  54% (72/132)[Kremote: Compressing objects:  55% (73/132)[Kremote: Compressing objects:  56% (74/132)[Kremote: Compressing objects:  57% (76/132)[Kremote: Compressing objects:  58% (77/132)[Kremote: Compressing objects:  59% (78/132)[Kremote: Compressing objects:  60% (80/132)[Kremote: Compressing objects:  61% (81/132)[Kremote: Compressing objects:  62% (82/132)[Kremote: Compressing objects:  63% (84/132)[Kremote: Compressing objects:  64% (85/132)[Kremote: Compressing objects:  65% (86/132)[Kremote: Compressing objects:  66% (88/132)[Kremote: Compressing objects:  67% (89/132)[Kremote: Compressing objects:  68% (90/132)[Kremote: Compressing objects:  69% (92/132)[Kremote: Compressing objects:  70% (93/132)[Kremote: Compressing objects:  71% (94/132)[Kremote: Compressing objects:  72% (96/132)[Kremote: Compressing objects:  73% (97/132)[Kremote: Compressing objects:  74% (98/132)[Kremote: Compressing objects:  75% (99/132)[Kremote: Compressing objects:  76% (101/132)[Kremote: Compressing objects:  77% (102/132)[Kremote: Compressing objects:  78% (103/132)[Kremote: Compressing objects:  79% (105/132)[Kremote: Compressing objects:  80% (106/132)[Kremote: Compressing objects:  81% (107/132)[Kremote: Compressing objects:  82% (109/132)[Kremote: Compressing objects:  83% (110/132)[Kremote: Compressing objects:  84% (111/132)[Kremote: Compressing objects:  85% (113/132)[Kremote: Compressing objects:  86% (114/132)[Kremote: Compressing objects:  87% (115/132)[Kremote: Compressing objects:  88% (117/132)[Kremote: Compressing objects:  89% (118/132)[Kremote: Compressing objects:  90% (119/132)[Kremote: Compressing objects:  91% (121/132)[Kremote: Compressing objects:  92% (122/132)[Kremote: Compressing objects:  93% (123/132)[Kremote: Compressing objects:  94% (125/132)[Kremote: Compressing objects:  95% (126/132)[Kremote: Compressing objects:  96% (127/132)[Kremote: Compressing objects:  97% (129/132)[Kremote: Compressing objects:  98% (130/132)[Kremote: Compressing objects:  99% (131/132)[Kremote: Compressing objects: 100% (132/132)[Kremote: Compressing objects: 100% (132/132), done.[K
Receiving objects:   0% (1/139)Receiving objects:   1% (2/139)Receiving objects:   2% (3/139)Receiving objects:   3% (5/139)Receiving objects:   4% (6/139)Receiving objects:   5% (7/139)Receiving objects:   6% (9/139)Receiving objects:   7% (10/139)Receiving objects:   8% (12/139)Receiving objects:   9% (13/139)Receiving objects:  10% (14/139)Receiving objects:  11% (16/139)Receiving objects:  12% (17/139)Receiving objects:  13% (19/139)Receiving objects:  14% (20/139)Receiving objects:  15% (21/139)Receiving objects:  16% (23/139)Receiving objects:  17% (24/139)Receiving objects:  18% (26/139)Receiving objects:  19% (27/139)Receiving objects:  20% (28/139)Receiving objects:  21% (30/139)Receiving objects:  22% (31/139)Receiving objects:  23% (32/139)Receiving objects:  24% (34/139)Receiving objects:  25% (35/139)Receiving objects:  26% (37/139)Receiving objects:  27% (38/139)Receiving objects:  28% (39/139)Receiving objects:  29% (41/139)Receiving objects:  30% (42/139)Receiving objects:  31% (44/139)Receiving objects:  32% (45/139)Receiving objects:  33% (46/139)Receiving objects:  34% (48/139)Receiving objects:  35% (49/139)Receiving objects:  36% (51/139)Receiving objects:  37% (52/139)Receiving objects:  38% (53/139)Receiving objects:  39% (55/139)Receiving objects:  40% (56/139)Receiving objects:  41% (57/139)Receiving objects:  42% (59/139)Receiving objects:  43% (60/139)Receiving objects:  44% (62/139)Receiving objects:  45% (63/139)Receiving objects:  46% (64/139)Receiving objects:  47% (66/139)Receiving objects:  48% (67/139)Receiving objects:  49% (69/139)Receiving objects:  50% (70/139)Receiving objects:  51% (71/139)Receiving objects:  52% (73/139)Receiving objects:  53% (74/139)Receiving objects:  54% (76/139)Receiving objects:  55% (77/139)Receiving objects:  56% (78/139)Receiving objects:  57% (80/139)Receiving objects:  58% (81/139)Receiving objects:  59% (83/139)Receiving objects:  60% (84/139)Receiving objects:  61% (85/139)Receiving objects:  62% (87/139)Receiving objects:  63% (88/139)Receiving objects:  64% (89/139)Receiving objects:  65% (91/139)Receiving objects:  66% (92/139)Receiving objects:  67% (94/139)Receiving objects:  68% (95/139)Receiving objects:  69% (96/139)Receiving objects:  70% (98/139)Receiving objects:  71% (99/139)Receiving objects:  72% (101/139)Receiving objects:  73% (102/139)Receiving objects:  74% (103/139)Receiving objects:  75% (105/139)Receiving objects:  76% (106/139)Receiving objects:  77% (108/139)Receiving objects:  78% (109/139)remote: Total 139 (delta 43), reused 0 (delta 0), pack-reused 0[K
Receiving objects:  79% (110/139)Receiving objects:  80% (112/139)Receiving objects:  81% (113/139)Receiving objects:  82% (114/139)Receiving objects:  83% (116/139)Receiving objects:  84% (117/139)Receiving objects:  85% (119/139)Receiving objects:  86% (120/139)Receiving objects:  87% (121/139)Receiving objects:  88% (123/139)Receiving objects:  89% (124/139)Receiving objects:  90% (126/139)Receiving objects:  91% (127/139)Receiving objects:  92% (128/139)Receiving objects:  93% (130/139)Receiving objects:  94% (131/139)Receiving objects:  95% (133/139)Receiving objects:  96% (134/139)Receiving objects:  97% (135/139)Receiving objects:  98% (137/139)Receiving objects:  99% (138/139)Receiving objects: 100% (139/139)Receiving objects: 100% (139/139), 780.29 KiB | 10.69 MiB/s, done.
Resolving deltas:   0% (0/43)Resolving deltas:   2% (1/43)Resolving deltas:   4% (2/43)Resolving deltas:   6% (3/43)Resolving deltas:   9% (4/43)Resolving deltas:  11% (5/43)Resolving deltas:  13% (6/43)Resolving deltas:  16% (7/43)Resolving deltas:  18% (8/43)Resolving deltas:  20% (9/43)Resolving deltas:  23% (10/43)Resolving deltas:  25% (11/43)Resolving deltas:  27% (12/43)Resolving deltas:  30% (13/43)Resolving deltas:  32% (14/43)Resolving deltas:  34% (15/43)Resolving deltas:  37% (16/43)Resolving deltas:  39% (17/43)Resolving deltas:  41% (18/43)Resolving deltas:  44% (19/43)Resolving deltas:  46% (20/43)Resolving deltas:  48% (21/43)Resolving deltas:  51% (22/43)Resolving deltas:  53% (23/43)Resolving deltas:  55% (24/43)Resolving deltas:  58% (25/43)Resolving deltas:  60% (26/43)Resolving deltas:  62% (27/43)Resolving deltas:  65% (28/43)Resolving deltas:  67% (29/43)Resolving deltas:  69% (30/43)Resolving deltas:  72% (31/43)Resolving deltas:  74% (32/43)Resolving deltas:  76% (33/43)Resolving deltas:  79% (34/43)Resolving deltas:  81% (35/43)Resolving deltas:  83% (36/43)Resolving deltas:  86% (37/43)Resolving deltas:  88% (38/43)Resolving deltas:  90% (39/43)Resolving deltas:  93% (40/43)Resolving deltas:  95% (41/43)Resolving deltas:  97% (42/43)Resolving deltas: 100% (43/43)Resolving deltas: 100% (43/43), completed with 14 local objects.
From ssh://remote01.cs.binghamton.edu/~umrigar/git-repos/cs471
   9d65b43..ddc4401  main       -> origin/main
Updating 9d65b43..ddc4401
Fast-forward
 exercises/config.json                                   |    4 [32m+[m
 exercises/index.html                                    |   29 [32m+[m[31m-[m
 exercises/index.umt                                     |    2 [32m+[m[31m-[m
 exercises/questions/index.js                            |    3 [32m+[m
 exercises/questions/package-lock.json                   |   35 [32m++[m
 exercises/questions/package.json                        |   18 [32m+[m
 exercises/questions/src/.gitignore                      |    2 [32m+[m
 exercises/questions/src/general/array-offset.js         |  114 [32m+++++[m
 exercises/questions/src/general/assoc-prec.js           |  104 [32m+++++[m
 exercises/questions/src/general/desc-to-regex.js        |   96 [32m++++[m
 exercises/questions/src/general/dynamic-static-scope.js |  129 [32m++++++[m
 exercises/questions/src/general/expr-choices.js         |  132 [32m++++++[m
 exercises/questions/src/general/gram-assoc-prec.js      |  138 [32m++++++[m
 exercises/questions/src/general/meta.js                 |   17 [32m+[m
 exercises/questions/src/general/name-equiv.js           |  148 [32m+++++++[m
 exercises/questions/src/general/pre-post-infix.js       |  135 [32m++++++[m
 exercises/questions/src/general/scan.js                 |  184 [32m++++++++[m
 exercises/questions/src/general/sizeof.js               |  164 [32m+++++++[m
 exercises/questions/src/general/syntax-true-false.js    |  152 [32m+++++++[m
 exercises/questions/src/meta.js                         |   22 [32m+[m
 exercises/questions/src/prolog/list-match.js            |  190 [32m++++++++[m
 exercises/questions/src/prolog/meta.js                  |    8 [32m+[m
 exercises/questions/src/prolog/prolog-scheme.js         |   87 [32m++++[m
 exercises/questions/src/scheme/list-access.js           |  168 [32m+++++++[m
 exercises/questions/src/scheme/map-fold.js              |   92 [32m++++[m
 exercises/questions/src/scheme/meta.js                  |   11 [32m+[m
 exercises/questions/src/scheme/pair-list.js             |  149 [32m+++++++[m
 exercises/questions/src/scheme/tail-recursion.js        |  378 [32m++++++++++++++++[m
 exercises/templates/index.html                          |   39 [32m++[m
 index.html                                              |   19 [32m+[m[31m-[m
 index.umt                                               |    8 [32m+[m
 labs/index.html                                         |    3 [32m+[m
 labs/index.umt                                          |    9 [32m+[m[31m-[m
 labs/lab1                                               |    1 [32m+[m
 labs/regex-lexer/exercises/01                           |    1 [32m+[m
 labs/regex-lexer/exercises/02                           |    1 [32m+[m
 labs/regex-lexer/exercises/exercises                    |    8 [32m+[m
 labs/regex-lexer/exercises/lexer/data.txt               |    1 [32m+[m
 labs/regex-lexer/exercises/lexer/lexer.mjs              |   52 [32m+++[m
 labs/regex-lexer/exercises/lexer/lexer.py               |   63 [32m+++[m
 labs/regex-lexer/exercises/regex/data.txt               |    4 [32m+[m
 labs/regex-lexer/exercises/regex/lex1.mjs               |    6 [32m+[m
 labs/regex-lexer/exercises/regex/lexer.mjs              |   29 [32m++[m
 labs/regex-lexer/exercises/regex/table-lexer.mjs        |   47 [32m++[m
 labs/regex-lexer/regex-lexer.html                       |  141 [32m++++++[m
 labs/regex-lexer/regex-lexer.pdf                        |  Bin [31m0[m -> [32m66602[m bytes
 labs/regex-lexer/regex-lexer.umt                        |  178 [32m++++++++[m
 labs/regex-lexer/regex-lexer/hl-fine_blue.css           |   19 [32m+[m
 misc/471a-videos/index.html                             |   16 [32m+[m[31m-[m
 misc/471a-videos/index.umt                              |   15 [32m+[m[31m-[m
 misc/471b-videos/index.html                             |   14 [32m+[m[31m-[m
 misc/471b-videos/index.umt                              |   13 [32m+[m
 slides/index.html                                       |    3 [32m+[m
 slides/index.umt                                        |    2 [32m+[m[31m-[m
 slides/intro/intro.html                                 |  159 [32m+++[m[31m----[m
 slides/intro/intro.pdf                                  |  Bin [31m109461[m -> [32m110751[m bytes
 slides/intro/intro.umt                                  |   21 [32m+[m[31m-[m
 slides/syntax/code/arith/arith.mjs                      |  232 [32m++++++++++[m
 slides/syntax/code/arith/index.html                     |   63 [32m+++[m
 slides/syntax/code/max-munch.c                          |    5 [32m+[m
 slides/syntax/code/slash-star-munch.c                   |    5 [32m+[m
 slides/syntax/figs/1-04.jpg                             |  Bin [31m0[m -> [32m73883[m bytes
 slides/syntax/figs/Makefile                             |    8 [32m+[m
 slides/syntax/figs/ast.dot                              |   18 [32m+[m
 slides/syntax/figs/ast.png                              |  Bin [31m0[m -> [32m6264[m bytes
 slides/syntax/figs/compiler-organization.dot            |   21 [32m+[m
 slides/syntax/figs/compiler-organization.png            |  Bin [31m0[m -> [32m15059[m bytes
 slides/syntax/figs/compiler.dot                         |   16 [32m+[m
 slides/syntax/figs/compiler.png                         |  Bin [31m0[m -> [32m12285[m bytes
 slides/syntax/figs/fig_2-01.jpg                         |  Bin [31m0[m -> [32m39567[m bytes
 slides/syntax/figs/fig_2-02.jpg                         |  Bin [31m0[m -> [32m38759[m bytes
 slides/syntax/figs/fig_2-03.jpg                         |  Bin [31m0[m -> [32m44641[m bytes
 slides/syntax/figs/fig_2-04.jpg                         |  Bin [31m0[m -> [32m47939[m bytes
 slides/syntax/figs/front-back.dot                       |   16 [32m+[m
 slides/syntax/figs/front-back.png                       |  Bin [31m0[m -> [32m7077[m bytes
 slides/syntax/figs/front-opt-back.dot                   |   17 [32m+[m
 slides/syntax/figs/front-opt-back.png                   |  Bin [31m0[m -> [32m8780[m bytes
 slides/syntax/figs/interpreter.dot                      |   14 [32m+[m
 slides/syntax/figs/interpreter.png                      |  Bin [31m0[m -> [32m7937[m bytes
 slides/syntax/syntax.html                               |  674 [32m++++++++++++++++++++++++++++[m
 slides/syntax/syntax.pdf                                |  Bin [31m0[m -> [32m547498[m bytes
 slides/syntax/syntax.umt                                | 1250 [32m++++++++++++++++++++++++++++++++++++++++++++++++++++[m
 slides/syntax/syntax/hl-fine_blue.css                   |   19 [32m+[m
 83 files changed, 5809 insertions(+), 132 deletions(-)
 create mode 100644 exercises/config.json
 create mode 100644 exercises/questions/index.js
 create mode 100644 exercises/questions/package-lock.json
 create mode 100644 exercises/questions/package.json
 create mode 100644 exercises/questions/src/.gitignore
 create mode 100644 exercises/questions/src/general/array-offset.js
 create mode 100644 exercises/questions/src/general/assoc-prec.js
 create mode 100644 exercises/questions/src/general/desc-to-regex.js
 create mode 100644 exercises/questions/src/general/dynamic-static-scope.js
 create mode 100644 exercises/questions/src/general/expr-choices.js
 create mode 100644 exercises/questions/src/general/gram-assoc-prec.js
 create mode 100644 exercises/questions/src/general/meta.js
 create mode 100644 exercises/questions/src/general/name-equiv.js
 create mode 100644 exercises/questions/src/general/pre-post-infix.js
 create mode 100644 exercises/questions/src/general/scan.js
 create mode 100644 exercises/questions/src/general/sizeof.js
 create mode 100644 exercises/questions/src/general/syntax-true-false.js
 create mode 100644 exercises/questions/src/meta.js
 create mode 100644 exercises/questions/src/prolog/list-match.js
 create mode 100644 exercises/questions/src/prolog/meta.js
 create mode 100644 exercises/questions/src/prolog/prolog-scheme.js
 create mode 100644 exercises/questions/src/scheme/list-access.js
 create mode 100644 exercises/questions/src/scheme/map-fold.js
 create mode 100644 exercises/questions/src/scheme/meta.js
 create mode 100644 exercises/questions/src/scheme/pair-list.js
 create mode 100644 exercises/questions/src/scheme/tail-recursion.js
 create mode 100644 exercises/templates/index.html
 create mode 120000 labs/lab1
 create mode 120000 labs/regex-lexer/exercises/01
 create mode 120000 labs/regex-lexer/exercises/02
 create mode 100644 labs/regex-lexer/exercises/exercises
 create mode 120000 labs/regex-lexer/exercises/lexer/data.txt
 create mode 100755 labs/regex-lexer/exercises/lexer/lexer.mjs
 create mode 100755 labs/regex-lexer/exercises/lexer/lexer.py
 create mode 100644 labs/regex-lexer/exercises/regex/data.txt
 create mode 100644 labs/regex-lexer/exercises/regex/lex1.mjs
 create mode 100755 labs/regex-lexer/exercises/regex/lexer.mjs
 create mode 100644 labs/regex-lexer/exercises/regex/table-lexer.mjs
 create mode 100644 labs/regex-lexer/regex-lexer.html
 create mode 100644 labs/regex-lexer/regex-lexer.pdf
 create mode 100644 labs/regex-lexer/regex-lexer.umt
 create mode 100644 labs/regex-lexer/regex-lexer/hl-fine_blue.css
 create mode 100644 slides/syntax/code/arith/arith.mjs
 create mode 100644 slides/syntax/code/arith/index.html
 create mode 100644 slides/syntax/code/max-munch.c
 create mode 100644 slides/syntax/code/slash-star-munch.c
 create mode 100755 slides/syntax/figs/1-04.jpg
 create mode 100644 slides/syntax/figs/Makefile
 create mode 100644 slides/syntax/figs/ast.dot
 create mode 100644 slides/syntax/figs/ast.png
 create mode 100644 slides/syntax/figs/compiler-organization.dot
 create mode 100644 slides/syntax/figs/compiler-organization.png
 create mode 100644 slides/syntax/figs/compiler.dot
 create mode 100644 slides/syntax/figs/compiler.png
 create mode 100644 slides/syntax/figs/fig_2-01.jpg
 create mode 100644 slides/syntax/figs/fig_2-02.jpg
 create mode 100644 slides/syntax/figs/fig_2-03.jpg
 create mode 100644 slides/syntax/figs/fig_2-04.jpg
 create mode 100644 slides/syntax/figs/front-back.dot
 create mode 100644 slides/syntax/figs/front-back.png
 create mode 100644 slides/syntax/figs/front-opt-back.dot
 create mode 100644 slides/syntax/figs/front-opt-back.png
 create mode 100644 slides/syntax/figs/interpreter.dot
 create mode 100644 slides/syntax/figs/interpreter.png
 create mode 100644 slides/syntax/syntax.html
 create mode 100644 slides/syntax/syntax.pdf
 create mode 100644 slides/syntax/syntax.umt
 create mode 100644 slides/syntax/syntax/hl-fine_blue.css
[?2004hcmcborr1@remote02:~/projects/cs471$ ls
[?2004lannounce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
[?2004hcmcborr1@remote02:~/projects/cs471$ cd ;a[K[Klabs/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs$ lls[K[Ks
[?2004lindex.html  index.umt  lab0  lab1  regex-lexer	start-me-up  working
[?2004hcmcborr1@remote02:~/projects/cs471/labs$ cd lab1
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab1$ ls
[?2004lexercises  regex-lexer	regex-lexer.html  regex-lexer.pdf  regex-lexer.umt
[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab1$ cd exercises/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/projects/cs471/labs/lab1/exercises$ cd ~/it[K471a/submit/lab1/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ ls
[?2004llab1.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ cd[K[Kcp -pr ~/cs471/labs/lab1/exer[Cp/cs471/labs/lab1/exerr/cs471/labs/lab1/exero/cs471/labs/lab1/exerj/cs471/labs/lab1/exere/cs471/labs/lab1/exerc/cs471/labs/lab1/exert/cs471/labs/lab1/exers/cs471/labs/lab1/exer[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K/projects/cs471/labs/lab1/exercises/ .
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ ls
[?2004lexercises  lab1.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ cd l[Kexercises/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd cs47[K[K[K[K~/cd[Ks471/
[?2004l[?2004hcmcborr1@remote02:~/cs471$ ls
[?2004llab1
[?2004hcmcborr1@remote02:~/cs471$ cd lab1/
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1$ ls
[?2004lsubmit
[?2004hcmcborr1@remote02:~/cs471/lab1$ cd submit/
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1/submit$ s[Kls
[?2004llab1
[?2004hcmcborr1@remote02:~/cs471/lab1/submit$ cd lab1/
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1/submit/lab1$ ls
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1/submit/lab1$ cd .. 
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1/submit$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/cs471/lab1$ l[Kcd..
[?2004lbash: cd..: command not found
[?2004hcmcborr1@remote02:~/cs471/lab1$ rm [K[K[Kcd .. 
[?2004l[?2004hcmcborr1@remote02:~/cs471$ rm .
[?2004lrm: cannot remove '.': Is a directory
[?2004hcmcborr1@remote02:~/cs471$ cd[K[Krm .[K/cs471
[?2004lrm: cannot remove '/cs471': No such file or directory
[?2004hcmcborr1@remote02:~/cs471$ rm -1[Kr /cs471
[?2004lrm: cannot remove '/cs471': No such file or directory
[?2004hcmcborr1@remote02:~/cs471$ cd ..
[?2004l[?2004hcmcborr1@remote02:~$ ls
[?2004l Arduino   cs320   cs428   Desktop     lab	     lab7.txt	 Pictures   Templates
 cs120	   cs350   cs440   Documents  'Lab 4.circ'   lab7.txt~	 projects   tmp
 cs220	   cs373   cs457   Downloads   lab7	     Log1.circ	 Public    '#toneMelody.c#'
 cs240	   cs375   cs471   i471a      '#lab7.txt#'   Music	 Queue.h    Videos
[?2004hcmcborr1@remote02:~$ cd[K[Krm cs4[K[K[K-r cs[K[K.[K/[Kcs471
[?2004l[?2004hcmcborr1@remote02:~$ ls
[?2004l Arduino   cs320   cs428     Documents	'Lab 4.circ'   lab7.txt~   projects    tmp
 cs120	   cs350   cs440     Downloads	 lab7	       Log1.circ   Public     '#toneMelody.c#'
 cs220	   cs373   cs457     i471a	'#lab7.txt#'   Music	   Queue.h     Videos
 cs240	   cs375   Desktop   lab	 lab7.txt      Pictures    Templates
[?2004hcmcborr1@remote02:~$ cd /[K`[K~/cs471
[?2004lbash: cd: /home/cmcborr1/cs471: No such file or directory
[?2004hcmcborr1@remote02:~$ cd ~/r[Kprojects/cs471/
[?2004l[?2004hcmcborr1@remote02:~/projects/cs471$ ;s[K[Kls
[?2004lannounce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
[?2004hcmcborr1@remote02:~/projects/cs471$ cd [K[K[Kcd ~/i471a/submit/lab1/exercises/regex/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ cd[K[K./lexer.mjs 
[?2004lusage: lexer.mjs RE_TABLE_FILE INPUT_FILE
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex1.mjs data.txt
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ cd[K[Knano ,l[K[Klex1.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 6 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex1.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;20H// /./ is a regex which matches any char other than '\n'[7d};[2d[?12l[?25h[?25l[61;17H             (B[0;7mM-D(B[m DOS Format[15X[61;59H(B[0;7mM-A(B[m Append      [81G       (B[0;7mM-B(B[m Backup File[K[62;2H(B[0;7mC(B[m Cancel[17G             (B[0;7mM-M(B[m Mac Format[15X[62;59H(B[0;7mM-P(B[m Prepend     [81G       (B[0;7m^T(B[m Browse[K[60d(B[0;7mFile Name to Write: lex1.mjs                                                                                         [60;29H(B[m[?12l[?25h[?25l(B[0;7ml(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7mx(B[m[?12l[?25h[?25l(B[0;7m2(B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l(B[0;7ml(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7mx(B[m[?12l[?25h[?25l(B[0;7m2(B[m[?12l[?25h[?25l(B[0;7m.(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7mj(B[m[?12l[?25h[?25l(B[0;7ms(B[m[?12l[?25h[?25l(B[0;7mSave file under DIFFERENT NAME?[61d Y(B[m Yes[K[62d(B[0;7m N(B[m No    [17G(B[0;7m^C(B[m Cancel[K[60;33H[?12l[?25h[?25l[60;51H[1K (B[0;7m[ Writing... ](B[m[K[1;61H(B[0;7m2[116G(B[m[60;51H(B[0;7m[ Wrote 6 lines ](B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;18H(B[0;7mR(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[2dlexport default {l[?12l[?25h[?25lsexport default {ls[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;50H(B[0;7m[ Undid deletion ](B[m[2dlsexport default {ls[?12l[?25h[?25l[60;58H(B[0;7maddi[68G(B[m[1;67H(B[0;7m [116G(B[m[2d[2P[?12l[?25h[?25l[60;50H  (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 6 lines ](B[m[2d[?12l[?25h[?25l[61;17H[23X[61;40H(B[0;7mM-F(B[m New Buffer [61;65H[14X[61;79H(B[0;7m^X(B[m Execute Command[K[62;2H(B[0;7mC(B[m Cancel[17G[23X[62;40H(B[0;7mM-N(B[m No Conversion[62;65H[14X[62;79H(B[0;7m^T(B[m Browse[K[60d(B[0;7mFile to insert [from ./]:                                                                                            [60;27H(B[m[?12l[?25h[?25l(B[0;7ml(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7mx(B[m[?12l[?25h[?25l(B[0;7m1(B[m[?12l[?25h[?25l(B[0;7m.(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7mj(B[m[?12l[?25h[?25l(B[0;7ms(B[m[?12l[?25h[?25l[60;51H[1K (B[0;7m[ Reading... ](B[m[K[60;51H(B[0;7m[ Read 6 lines ](B[m[1;67H(B[0;7m*[116G(B[m[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute      (B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62;2H(B[0;7mX(B[m Exit  [17G(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace      (B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify      (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[8dexport default {[9;3H$Ignore: /\s+/,  //this will be ignored.[10;3HINT: /\d+/,[20G//token with kind INT[11;3HCHAR: /./,[20G//single char: must be last;[12;20H// /./ is a regex which matches any char other than '\n'[13d};[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[60;50H(B[0;7m[ Undid insertion ](B[m[1;67H(B[0;7m [116G(B[m[8d[K[9d[K[10d[K[11d[K[12d[K[13d[K[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ lsnano lex1.mjs ls[Knano lex1.mjs [1P[1@2ls[K./lexer.mjs lex1.mjs data.txtls[K./lexer.mjs lex1.mjs data.txtls[Knano lex2.mjs [C[1P[1@1
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 6 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex1.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;20H// /./ is a regex which matches any char other than '\n'[7d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex1.mjs [1P[1@2
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 6 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;20H// /./ is a regex which matches any char other than '\n'[7d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[6;76H[?12l[?25h[?25l[?12l[?25h[?25l[5;48H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;59r[6;1HM[1;62r[6;1H[?12l[?25h[?25l[6;9H[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;11H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ git checkout -l
[?2004lA	submit/lab1/lab1.LOG
Your branch is up to date with 'origin/lab1'.
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ git ce[Kheckout -b lab1
[?2004lfatal: A branch named 'lab1' already exists.
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: / /,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;8H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex[K[K[Ktable-lexer.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 47 lines ](B[m[H(B[0;7m  GNU nano 5.4                                       table-lexer.mjs                                                 [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default class Lexer {[3;3Hconstructor(table) {[4;5Hthis._nextToken = tableMatcher(table);[5;3H}[7dscan(text) {[8;5Hconst tokens = [];[9;5Hwhile (text.length > 0) {[10;7Hconst token = this._nextToken(text);[11;7Htext = text.substring(token.lexeme.length);[12;7Hif (token.kind !== '$Ignore') {[13;9Htokens.push(token);[14;7H}[15;5H} //while[16;5Hreturn tokens;[17;3H}[19d}[22dfunction tableMatcher(table) {[23d const reString =[24;5HObject.entries(table)[25;5H.map(([t, re]) => `(?<${t}>^${re.toString().slice(1, -1)})`)[26;5H.join('|');[27;3Hconst re = new RegExp(`${reString}`);[28;3Hreturn text => {[29;5Hlet m;[30;5Hm = text.match(re);[31;5Hif (!m) {[32;7Hreturn new Token('$err', text.substring(0, 1), text.coord);[33;5H}[34delse {[35;7Hconst [ [type, lexeme ] ] =[36;9HObject.entries(m.groups).[37;9Hfilter(([t, v]) => v !== undefined);[38;7Hreturn new Token(type, text.substring(0, lexeme.length));[39;5H}[40;3H};[41d}[43dclass Token {[44;3Hconstructor(kind, lexeme) {[45;5HObject.assign(this, {kind, lexeme});[46;3H}[47d}[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lexer.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 29 lines ](B[m[H(B[0;7m  GNU nano 5.4                                          lexer.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d[36m#!/usr/bin/env node[4d[39m(B[mimport fs from 'fs';[5dimport Path from 'path';[7dimport Lexer from './table-lexer.mjs';[9dfunction usage() {[10;3Hconst prog = Path.basename(process.argv[1])[11;3Hconsole.error(`usage: ${prog} RE_TABLE_FILE INPUT_FILE`);[12;3Hprocess.exit(1);[13d}[15dconst CHAR_SET = 'utf8';[16dasync function main() {[17;3Hif (process.argv.length !== 4) usage();[18;3Hconst [tableFile, dataFile] = process.argv.slice(2);[19;3Hconst fileSpec = tableFile.startsWith('.') ? tableFile : `./${tableFile}`;[20;3Hconst table = (await import(fileSpec)).default;[21;3Hconst lexer = new Lexer(table);[22;3Hconst text = fs.readFileSync(dataFile, CHAR_SET);[23;3Hfor (const token of lexer.scan(text)) {[24;5Hconsole.log(token);[25;3H}[26d}[29dmain().catch(err => console.error(err));[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lexer.mjs ls[Knano table-lexer.mjs ls[Knano table-lexer.mjs ls[Knano lex2.mjs ls[Knano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: / /,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;8H[ /,[?12l[?25h[?25lA /,[?12l[?25h[?25l- /,[?12l[?25h[?25lZ /,[?12l[?25h[?25l] /,[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25la] /,[?12l[?25h[?25l-] /,[?12l[?25h[?25lz] /,[?12l[?25h[?25l][?12l[?25h[?25l[60d[K[6;15H[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l] /,[K[?12l[?25h[?25l\] /,[?12l[?25h[?25lw] /,[?12l[?25h[?25l][?12l[?25h[?25l /,[K[?12l[?25h[?25l [?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [1@er[C[C[C[C[Cls[Knano table-lexer.mjs ls[Knano lex2.mjs ls[Kgit checkout -b lab1ls[Knano lex2.mjs ls[Knano table-lexer.mjs ls[Knano lexer.mjs [1P2[C[C[C[C[C[K./lexer.mjs [K[K[K[K[K2 RE[K[Klex1[K[K[K[K[K[K[K[K[K[Kexer.mjs lex2.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[6;12H[?12l[?25h[?25l[7d[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;11H],[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[/\w/],[8G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;8H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs ls[K./lexer.mjs lex2.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: [/\w/],[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;12H,[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/\w/,[K[7G[?12l[?25h[?25l^/\w/,[8G[?12l[?25h[?25l /\w/,[9G[?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[6;9H[?12l[?25h[?25l/\w/,[K[8G[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: ^/\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;7H/\w/,[K[7G[?12l[?25h[?25l/[?12l[?25h[?25l^\w/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;7H^\w/,[K[7G[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Unexpected token '^'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: ^\w,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;7H/^\w,[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l,[?12l[?25h[?25l[?12l[?25h[?25l/,[?12l[?25h[?25l[?12l[?25h[?25l[60;51H (B[0;1m[37m[41m[ Unbound key ][39;49m(B[m[6;11H[?12l[?25h[?25l[60d[K[6;12H[?12l[?25h[?25l[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Unexpected token '/'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^/,/w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;11Hw/,[K[?12l[?25h[?25lw/,[K[?12l[?25h[?25lw/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;9H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;8Hw/,[K[?12l[?25h[?25l^w/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;9H/w/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^/w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;9Hw/,[K[?12l[?25h[?25lw[?12l[?25h[?25l./,[?12l[?25h[?25l*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;12H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^w.*/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;7H[1P[?12l[?25h[?25l^[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;11H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Unexpected token '^'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: ^w.*,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;8H/w.*,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Unexpected token '^'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: ^/w.*,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;7H/^/w.*,[8G[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l,[?12l[?25h[?25l[?12l[?25h[?25l/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ make
[?2004lmake: *** No targets specified and no makefile found.  Stop.
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ makenano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt make[Knano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^/w.*/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;9Hw.*/,[K[9G[?12l[?25h[?25l\w.*/,[10G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\w.*/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;12H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;11H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;11H./,[?12l[?25h[?25l*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;13H[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;11H*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l[*/,[?12l[?25h[?25l]*/,[?12l[?25h[?25l[?12l[?25h[?25ld]*/,[?12l[?25h[?25la]*/,[?12l[?25h[?25l]*/,[K[?12l[?25h[?25l]*/,[K[?12l[?25h[?25lA]*/,[?12l[?25h[?25l-]*/,[?12l[?25h[?25lz]*/,[?12l[?25h[?25la]*/,[?12l[?25h[?25l-]*/,[?12l[?25h[?25lz]*/,[?12l[?25h[?25l ]*/,[?12l[?25h[?25l_]*/,[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^[A-za-z _]*/,[7d// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l [?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;18H*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[60d[K[6;15H[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l*/,[K[?12l[?25h[?25l\*/,[?12l[?25h[?25lw*/,[?12l[?25h[?25l.*/,[?12l[?25h[?25l*[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\w.*/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;12H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l\/,[?12l[?25h[?25lA/,[?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;12H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /\A\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lA[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;9H\w/,[K[?12l[?25h[?25l\w/,[K[?12l[?25h[?25l^\w/,[?12l[?25h[?25l.\w/,[?12l[?25h[?25l\w/,[K[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l./,[?12l[?25h[?25l*/,[?12l[?25h[?25l[7d[?12l[?25h[?25l[8;3H[?12l[?25h[?25l[7;13H[?12l[?25h[?25l[60d[K[6;13H[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[/,[?12l[?25h[?25l]/,[?12l[?25h[?25l[?12l[?25h[?25la]/,[?12l[?25h[?25ld]/,[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25lA]/,[?12l[?25h[?25l-]/,[?12l[?25h[?25lZ]/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^[A-Z]/,[9G[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lZ[?12l[?25h[?25la]/,[?12l[?25h[?25l-]/,[?12l[?25h[?25lz]/,[?12l[?25h[?25l_]/,[?12l[?25h[?25l[60d(B[0;7mSave modified buffer?                                                                                                [61;1H Y(B[m Yes[K[62d(B[0;7m N(B[m No  [62;18H(B[0;7mC(B[m Cancel[K[60;23H[?12l[?25h[?25l[60;52H[1K (B[0;7m[ Cancelled ](B[m[K[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;18H(B[0;7mR(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[6;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;17H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;17H/,[K[?12l[?25h[?25l]/,[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^[A-Za-z_]/,[7d// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lZ[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ clear
[?2004l[H[2J[3J[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ clear./lexer.mjs lex2.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt clear[K./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^[A-Za-z_]/,[7d// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lZ[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;16H]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[60d[K[6;11H[?12l[?25h[?25l]/,[K[?12l[?25h[?25l!]/,[?12l[?25h[?25l]/,[K[?12l[?25h[?25l^]/,[?12l[?25h[?25l\]/,[?12l[?25h[?25lD]/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\D]/,[K[10G[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\D]/,[K[9G[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l/,[K[?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\D\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[6;11H[?12l[?25h[?25l[60;32H(B[0;7m[ line 5/8 (62%), col 11/15 (73%), char 167/251 (66%) ](B[m[6;11H[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[5;48H[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l7[4;60r8M[1;62r[5;1H[2P[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[8G[1K (B[mINT: /\d+/,      //token with kind INT[5;9H[?12l[?25h[?25l[8P[?12l[?25h[?25l INT: /\d+/,      //token with kind INT [?12l[?25h[?25l  INT: /\d+/,      //token with kind INT  [?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l7[4;60r8M[1;62r[4;4HID: /^\D\w/,[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;16H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P  [?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;3H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ make [K[K[K[K[Knano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ [A./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^\D\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;60r[60;1H
[1;62r[59;1H[K[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l7[5;60r8M[1;62r[6;1H[2P[?12l[?25h[?25l CHAR: /./,[18G //single char: must be last; [?12l[?25h[?25l  CHAR: /./,[19G //single char: must be last;  [?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l7[5;60r8M[1;62r[5;3HID: /^\D\w/,[6d[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;15H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;60r[60;1H
[1;62r[59;1H[K[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5d[?12l[?25h[?25l7[6;60r8[6dM[1;62r[6;1H[?12l[?25h[?25l7[6;60r8M[1;62r[6;3HID: /^\D\w/,[7d[?12l[?25h[?25l[7;60r[60;1H
[1;62r[6;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^\D\w/,[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;67H// /./ is a regex which matches any char other tha(B[0;7m>[5;48H(B[m[?12l[?25h[?25l7[6;60r8[6dM[1;62r[5;67H[K[6;20H// /./ is a regex which matches any char other than '\n'[?12l[?25h[?25l[A[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[3;43H[?12l[?25h[?25l7[4;60r8[4dM[1;62r[4;1H[?12l[?25h[?25l7[4;60r8M[1;62r[4;3HID: /^\D\w/,[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;8H[^\D\w/,[9G[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l]/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[60d[K[4;15H[?12l[?25h[?25l/,[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\\w/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25l\w/,[K[?12l[?25h[?25l]\w/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l^[^\D]\w/,[4;9H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[^\D]\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3;43H[?12l[?25h[?25l[4;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[60d[K[4;10H[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l./,[?12l[?25h[?25l*/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^\w.*/,[9G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21  23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;60r[60;1H
[1;62r[59;1H[K[4d[?12l[?25h[?25l[3;43H[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[5d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l7[5;60r8M[1;62r[6;1H[2P[?12l[?25h[?25l[8G[1K (B[mCHAR: /./,       //single char: must be last;[6;9H[?12l[?25h[?25l[A  [?12l[?25h[?25l7[5;60r8M[1;62r[5;5HID: /^\w.*/,[6d[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;19H[?12l[?25h[?25l[6d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[8P[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;19HCHAR: /./,[36G//single char: must be last;[5;19H[?12l[?25h[?25l7[6;60r8[6dM[1;62r[5;19H[K[6dCHAR: /./,[18G//single char: must be last;[?12l[?25h[?25l CHAR: /./,[18G //single char: must be last; [?12l[?25h[?25l  CHAR: /./,[19G //single char: must be last;  [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1P   [?12l[?25h[?25l[1P  [?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;3H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\w.*/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[6;48H[?12l[?25h[?25l[?12l[?25h[?25l[5;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;12H/,[K[?12l[?25h[?25l\/,[?12l[?25h[?25lS/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\w.\S/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[5;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[5;14H[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;10H.\S/,[K[10G[?12l[?25h[?25lD.\S/,[11G[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;11H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5;15H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;11H./,[?12l[?25h[?25l\/,[?12l[?25h[?25lS/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D.\S/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;13H/,[K[?12l[?25h[?25lW/,[?12l[?25h[?25l/,[K[?12l[?25h[?25lw/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[5;12H[?12l[?25h[?25l\w/,[K[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;11H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;13H./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w./,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;14H*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w.*/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[5;19H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;13H\.*/,[?12l[?25h[?25lS.*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w\S.*/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;16H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w\S/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5;19H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;15H\/,[?12l[?25h[?25l7[6;59r8[6dM[1;62r[5;16H[K[6d/,[?12l[?25h[?25l[6;59r[59;1H
[1;62r[5;16H/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w\S\/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;15H/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^\D\w\S/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;60r[60;1H
[1;62r[59;1H[K[5d[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[5;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[4;3HID: /^\D\w\S/,[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^\D\w\S/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;9H[\D\w\S/,[4;10H[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[60d[K[4;15H[?12l[?25h[?25l[?12l[?25h[?25l]\S/,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D\w]\S/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D\w]./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21  23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'// asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D\w].*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D\w]./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;20H[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H]./,[K[?12l[?25h[?25l]./,[K[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l/,[K[?12l[?25h[?25l\/,[60d[K[4;14H[?12l[?25h[?25lw/,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;43H[?12l[?25h[?25l[4;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;43H[?12l[?25h[?25l[4;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l^/,[?12l[?25h[?25l[/,[?12l[?25h[?25l]/,[?12l[?25h[?25l[?12l[?25h[?25l:]/,[?12l[?25h[?25lw]/,[?12l[?25h[?25lo]/,[?12l[?25h[?25lr]/,[?12l[?25h[?25ld]/,[?12l[?25h[?25l:]/,[60d[K[4;16H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^:word:]/,[4;11H[?12l[?25h[?25l\:word:]/,[4;12H[?12l[?25h[?25lD:word:]/,[4;13H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D:word:]/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;23H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;17H]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[[?12l[?25h[?25l^\D]/,[10G[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^[^\D]/,[9G[?12l[?25h[?25l[[?12l[?25h[?25l[60d[K[4;11H[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l./,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21 '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'34 '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'22 '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[^\D]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;10H[1P[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l[1P[?12l[?25h[?25ld]\w./,[12G[?12l[?25h[?25l[?12l[?25h[?25ld[?12l[?25h[?25l[1P[?12l[?25h[?25lD]\w./,[12G[?12l[?25h[?25l*]\w./,[13G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;17H*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;43H[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H*/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;60r[60;1H
[1;62r[59;1H[K[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[5;48H[?12l[?25h[?25l7[6;60r8[6dM[1;62r[6;1H[?12l[?25h[?25l7[6;60r8M[1;62r[6;3HID: /^[\D*]\w*/,[7d[?12l[?25h[?25l[7;60r[60;1H
[1;62r[6;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HCHAR: /./,[20G//single char: must be last;[6;3HID: /^[\D*]\w*/,[7d // /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[A[?12l[?25h[?25l7[5;60r8M[1;62r[6;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[5;60r8M[1;62r[5;3HID: /^[\D*]\w*/,[6d[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HINT: /\d+/,[20G//token with kind INT[5;3HID: /^[\D*]\w*/,[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[6d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[4;49H[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[5;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[4;3HCHAR: /./,[20G//single char: must be last;[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;48H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;48H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'1'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HCHAR: /./,[20G//single char: must be last;[5;3HINT: /\d+/,[20G//token with kind INT[6;3HID: /^[\D*]\w*/,[7d // /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[A[?12l[?25h[?25l7[5;60r8M[1;62r[6;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[5;60r8M[1;62r[5;3HID: /^[\D*]\w*/,[6d[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;21H[?12l[?25h[?25l7[6;60r8[6dM[1;62r[6;1H[?12l[?25h[?25l[6;60r[60;1H
[1;62r[5;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[5;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'1'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HCHAR: /./,[20G//single char: must be last;[5;3HID: /^[\D*]\w*/,[6;3HINT: /\d+/,[20G//token with kind INT[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[5d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[5;60r[60;1H
[1;62r[59;1H[K[5d[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[5;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[4;3HID: /^[\D*]\w*/,[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;21H[?12l[?25h[?25l[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[5;1H[?12l[?25h[?25l[6d[?12l[?25h[?25l7[6;60r8M[1;62r[7;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[6;60r8M[1;62r[6;3HCHAR: /./,[20G//single char: must be last;[7d[?12l[?25h[?25l[7;60r[60;1H
[1;62r[6;48H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;48H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ make[K[K[K[Knano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[4;14H.\w*/,[15G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*].\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;14H\w*/,[K[14G[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l*[?12l[?25h[?25l/,[K[?12l[?25h[?25l./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H./,[K[?12l[?25h[?25l./,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;14H/,[K[?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l /,[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25l[A[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H./,[?12l[?25h[?25l\/,[?12l[?25h[?25lw/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd s'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w.\w/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;18H/,[K[?12l[?25h[?25l/,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;21H[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25l[4d[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[4;11H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;8H[1P[?12l[?25h[?25l\[\D*]\w./,[4;9H[?12l[?25h[?25lA[\D*]\w./,[4;10H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;10H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /\A[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lA[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;9H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l^[\D*]\w./,[4;9H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;14H*\w./,[15G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'// asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]*\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;14H\w./,[K[14G[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l][?12l[?25h[?25l*\w./,[14G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'// asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]*\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[4;13H\w./,[K[13G[?12l[?25h[?25l[?12l[?25h[?25l*]\w./,[13G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H*./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D*]\w*./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;12H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;12H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w*./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;12H.]\w*./,[13G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22 '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'//'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D.]\w*./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l.[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l*[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H./,[K[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D.]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l.[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H/,[K[?12l[?25h[?25l*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D.]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D.]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l.[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[4;15H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;12H[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;12H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;12H^]\w*/,[13G[?12l[?25h[?25l\]\w*/,[14G[?12l[?25h[?25l\\]\w*/,[15G[?12l[?25h[?25l[1P\[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D^\]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H\\]\w*/,[15G[?12l[?25h[?25l\\\]\w*/,[16G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D^\\\]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H[1P\\[?12l[?25h[?25l[1P\[?12l[?25h[?25l[1P[?12l[?25h[?25l\]\w*/,[14G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D^\]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[4;22H[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;12H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H/,[K[?12l[?25h[?25l./,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdf'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w./,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[6;48H[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[5;29H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;16H*/,[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H^\w.*/,[14G[?12l[?25h[?25lS\w.*/,[15G[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^[?12l[?25h[?25lS[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l^]\w.*/,[60d[K[4;13H[?12l[?25h[?25l\]\w.*/,[14G[?12l[?25h[?25lS]\w.*/,[15G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21  23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D^\S]\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;14H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l][?12l[?25h[?25l[\w.*/,[14G[?12l[?25h[?25l^\w.*/,[15G[?12l[?25h[?25l[1P[60d[K[4;14H[?12l[?25h[?25l\\w.*/,[15G[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l\\w.*/,[14G[?12l[?25h[?25lS\w.*/,[15G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\S\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H*\w.*/,[16G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]\S*\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;15H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l\]\w.*/,[13G[?12l[?25h[?25lS]\w.*/,[14G[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[60d[K[4d  [?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;3H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'21  23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34  _22  ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D\S]\w.*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l][?12l[?25h[?25l[\w.*/,[14G[?12l[?25h[?25l]\w.*/,[15G[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[\w.*/,[14G[?12l[?25h[?25l]\w.*/,[60d[K[4;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l]/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_4'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'as'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'fs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D][\w.*]/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;17H]/,[K[?12l[?25h[?25l]/,[K[?12l[?25h[?25l][?12l[?25h[?25l*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;17H/,[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[\w]/,[14G[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'1'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'// asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]*[\w]/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H[1P[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l*/,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[4;17H[?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l/,[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[\w]/,[14G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'1'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A3'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'// asd sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D]*[\w]/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;13H[1P[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l*/,[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[6;60r[60;1H
[1;62r[59;1H[K[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[5;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[4;60r8M[1;62r[4;3HCHAR: /./,[20G//single char: must be last;[5d[?12l[?25h[?25l[5;60r[60;1H
[1;62r[4;48H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;48H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'1'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'3'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'2'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'4'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HCHAR: /./,[20G//single char: must be last;[5;3HID: /^[\D][\w]*/,[6;3HINT: /\d+/,[20G//token with kind INT[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;60r[60;1H
[1;62r[59;1H[K[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l7[6;60r8M[1;62r[7;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[6;60r8M[1;62r[6;3HCHAR: /./,[20G//single char: must be last;[7d[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 8 lines ](B[m[7d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 8 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[8;20H// /./ is a regex which matches any char other than '\n'[9d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[7;59r[59;1H
[1;62r[6;48H[?12l[?25h[?25l7[7;59r8[7dM[1;62r[7;1H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 8 lines ](B[m[4;4H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex2.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 8 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[\D][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[8;20H// /./ is a regex which matches any char other than '\n'[9d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lD[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;11H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lA][\w]*/,[4;11H[?12l[?25h[?25l-][\w]*/,[4;12H[?12l[?25h[?25lz][\w]*/,[4;13H[?12l[?25h[?25la][\w]*/,[4;14H[?12l[?25h[?25l-][\w]*/,[4;15H[?12l[?25h[?25lz][\w]*/,[4;16H[?12l[?25h[?25l_][\w]*/,[4;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 8 lines ](B[m[4;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ^C[?2004l[?2004h
[?2004l
bash: /lexer.mjs: No such file or directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 8 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[8;20H// /./ is a regex which matches any char other than '\n'[9d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[7;59r[59;1H
[1;62r[6;48H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;48H[?12l[?25h[?25l[61;17H             (B[0;7mM-D(B[m DOS Format[15X[61;59H(B[0;7mM-A(B[m Append      [81G       (B[0;7mM-B(B[m Backup File[K[62;2H(B[0;7mC(B[m Cancel[17G             (B[0;7mM-M(B[m Mac Format[15X[62;59H(B[0;7mM-P(B[m Prepend     [81G       (B[0;7m^T(B[m Browse[K[60d(B[0;7mFile Name to Write: lex2.mjs                                                                                         [60;29H(B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7m3(B[m[?12l[?25h[?25l(B[0;7m.(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7mj(B[m[?12l[?25h[?25l(B[0;7ms(B[m[?12l[?25h[?25l(B[0;7mSave file under DIFFERENT NAME?[61d Y(B[m Yes[K[62d(B[0;7m N(B[m No    [17G(B[0;7m^C(B[m Cancel[K[60;33H[?12l[?25h[?25l[60;51H[1K (B[0;7m[ Writing... ](B[m[K[1;61H(B[0;7m3[116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;18H(B[0;7mR(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[6;48H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[6;48H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H\/,  //this will be ignored.[3;17H[?12l[?25h[?25l /,  //this will be ignored.[3;18H[?12l[?25h[?25l\/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l/\/,  //this will be ignored.[3;18H[?12l[?25h[?25l//\/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs ls[Knano lex2.mjs ls[K/lexer.mjs lex2.mjs data.txt [1@.[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[1@3
[?2004lbash: /lexer.mjs: No such file or directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls/lexer.mjs lex3.mjs data.txt 
[?2004lbash: /lexer.mjs: No such file or directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ /lexer.mjs lex3.mjs data.txt [1@.
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls./lexer.mjs lex3.mjs data.txt [1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@.[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K[Knano lex
lex1.mjs   lex2.mjs   lex3.mjs   lexer.mjs  
cmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\//\/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l////,  //this will be ignored.[3;20H[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l ///,  //this will be ignored.[3;19H[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'/,  //this will be ignored.[3;22H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l'/'/,  //this will be ignored.[3;21H[?12l[?25h[?25l/[?12l[?25h[?25l//'/,  //this will be ignored.[3;23H[?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l'[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1P[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs ls[K./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Unexpected string
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[Cls[Knano lex3.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\ /'//'/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;23H[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[Cls[K./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\ '//',  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;48H[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l[A[?12l[?25h[?25l\[?12l[?25h[?25l [?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;22H/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\'//'/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l'[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H\\'//'/,  //this will be ignored.[3;18H[?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l\/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\\'//'\/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P\[?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P/[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l//,  //this will be ignored.[3;18H[?12l[?25h[?25l///,  //this will be ignored.[3;19H[?12l[?25h[?25l[1P/[?12l[?25h[?25l[1P[?12l[?25h[?25l\\/,  //this will be ignored.[3;18H[?12l[?25h[?25l//,  //this will be ignored.[3;19H[?12l[?25h[?25l\/,  //this will be ignored.[3;20H[?12l[?25h[?25l//,  //this will be ignored.[3;21H[?12l[?25h[?25l./,  //this will be ignored.[3;22H[?12l[?25h[?25l*/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\\/\/.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;14H[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H \/\/.*/,  //this will be ignored.[3;18H[?12l[?25h[?25l\[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l  /.*/,  //this will be ignored.[3;19H[?12l[?25h[?25l//.*/,  //this will be ignored.[3;20H[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l///.*/,  //this will be ignored.[3;21H[?12l[?25h[?25l[1P/[?12l[?25h[?25l\/.*/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\ /\/.*/,  //this will be ignored.[3;19H[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l\\/.*/,  //this will be ignored.[3;22H[?12l[?25h[?25l/[?12l[?25h[?25l\.*/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\ \/\\/\.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l.[?12l[?25h[?25l[60d[K[3;26H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;25H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P\[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Unexpected identifier
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3;44H[?12l[?25h[?25l[2;17H[?12l[?25h[?25l[3;44H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;44H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C[1P[1@2
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex2.mjs data.txt [16Pnano lex3.mjs[C[1P[1@2
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex2.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex2.mjs [16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs 2[C[C[C[C[C[16@./lexer.mjs lex2.mjs data.txt[C[16Pnano lex3.mjs[C[16@./lexer.mjs lex2.mjs data.txt[C[1P[1@2[1P[1@3
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[2;17H[?12l[?25h[?25l[3d[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H /,  //this will be ignored.[3;17H[?12l[?25h[?25l7[4;59r8[4dM[1;62r[3;17H[K[4d/,  //this will be ignored.[?12l[?25h[?25l[4;59r[59;1H
[1;62r[3;17H/,  //this will be ignored.[3;17H[?12l[?25h[?25l\/,  //this will be ignored.[3;18H[?12l[?25h[?25l//,  //this will be ignored.[3;19H[?12l[?25h[?25l\/,  //this will be ignored.[3;20H[?12l[?25h[?25l /,  //this will be ignored.[3;21H[?12l[?25h[?25l[1P[?12l[?25h[?25l\\/,  //this will be ignored.[3;21H[?12l[?25h[?25l//,  //this will be ignored.[3;22H[?12l[?25h[?25l\/,  //this will be ignored.[3;23H[?12l[?25h[?25l*/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ \/\\/\*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;51H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;28H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l\[?12l[?25h[?25l[1P[?12l[?25h[?25l/[?12l[?25h[?25l'\*/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l'//'\*/,  //this will be ignored.[3;19H[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;22H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ \'//'*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l'[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l'[?12l[?25h[?25l*[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;22H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P/[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l/[?12l[?25h[?25l\,  //this will be ignored.[3;18H[?12l[?25h[?25l{,  //this will be ignored.[3;19H[?12l[?25h[?25l2,  //this will be ignored.[3;20H[?12l[?25h[?25l},  //this will be ignored.[3;21H[?12l[?25h[?25l/,  //this will be ignored.[3;22H[?12l[?25h[?25l[1P[?12l[?25h[?25l.,  //this will be ignored.[3;22H[?12l[?25h[?25l/,  //this will be ignored.[3;23H[?12l[?25h[?25l[?12l[?25h[?25l*/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/\{2}.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H /\{2}.*/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression flags
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ /\{2}.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[60d[K[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l[61d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}./,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l*/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[2;17H[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H./,  //this will be ignored.[3;22H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}*./,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25lx[?12l[?25h[?25lp[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25l[3d[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;14H[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l*[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;21H\/,  //this will be ignored.[3;22H[?12l[?25h[?25lS/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;23H\/,  //this will be ignored.[3;24H[?12l[?25h[?25l\\/,  //this will be ignored.[3;25H[?12l[?25h[?25l[1P\[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lS\{2}+/,  //this will be ignored.[3;15H[?12l[?25h[?25l+\{2}+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\S+\{2}+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P[?12l[?25h[?25ls+\{2}+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\{2}+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;17H[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l/\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l\\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l{\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l}\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l+\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: /^\/{2}+\s+/: Nothing to repeat
    at file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lex3.mjs:2:12
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:154:23)[39m
[90m    at async Loader.import (node:internal/modules/esm/loader:177:24)[39m
    at async main (file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lexer.mjs:19:18)
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}+\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H+\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l+{2}\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: /^\/+{2}\s+/: Nothing to repeat
    at file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lex3.mjs:2:12
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:154:23)[39m
[90m    at async Loader.import (node:internal/modules/esm/loader:177:24)[39m
    at async main (file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lexer.mjs:19:18)
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/+{2}\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l+\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: /\/{2}+\s+/: Nothing to repeat
    at file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lex3.mjs:2:12
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:154:23)[39m
[90m    at async Loader.import (node:internal/modules/esm/loader:177:24)[39m
    at async main (file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lexer.mjs:19:18)
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/{2}+\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l+{2}\s+/,  //this will be ignored.[60d[K[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lSyntaxError: Invalid regular expression: /\/+{2}\s+/: Nothing to repeat
    at file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lex3.mjs:2:12
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:154:23)[39m
[90m    at async Loader.import (node:internal/modules/esm/loader:177:24)[39m
    at async main (file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lexer.mjs:19:18)
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/+{2}\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l^\/{2}\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H.\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l*\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}.*\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/{2}.*\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;14H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l/\s+/,  //this will be ignored.[3;13H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H /,  //this will be ignored.[3;17H[?12l[?25h[?25l\/,  //this will be ignored.[60d[K[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l//,  //this will be ignored.[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l\/,  //this will be ignored.[3;18H[?12l[?25h[?25l{/,  //this will be ignored.[3;19H[?12l[?25h[?25l[1P[?12l[?25h[?25l//,  //this will be ignored.[3;19H[?12l[?25h[?25l{/,  //this will be ignored.[3;20H[?12l[?25h[?25l2/,  //this will be ignored.[3;21H[?12l[?25h[?25l}/,  //this will be ignored.[3;22H[?12l[?25h[?25l./,  //this will be ignored.[3;23H[?12l[?25h[?25l*/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ \/{2}.*/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[60d[K[4;19H[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[A[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;24H[/,  //this will be ignored.[3;25H[?12l[?25h[?25l]/,  //this will be ignored.[3;26H[?12l[?25h[?25l[?12l[?25h[?25l:]/,  //this will be ignored.[3;26H[?12l[?25h[?25lb]/,  //this will be ignored.[3;27H[?12l[?25h[?25ll]/,  //this will be ignored.[3;28H[?12l[?25h[?25la]/,  //this will be ignored.[3;29H[?12l[?25h[?25ln]/,  //this will be ignored.[3;30H[?12l[?25h[?25lk]/,  //this will be ignored.[3;31H[?12l[?25h[?25l:]/,  //this will be ignored.[3;32H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;32H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ \/{2}.*[:blank:]/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l[A[?12l[?25h[?25l.[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l[[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;24H [:blank:]/,  //this will be ignored.[3;25H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/{2}.*[:blank:]/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l:[?12l[?25h[?25lb[?12l[?25h[?25ll[?12l[?25h[?25la[?12l[?25h[?25ln[?12l[?25h[?25lk[?12l[?25h[?25l:[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;29H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25ls:]/,  //this will be ignored.[3;26H[?12l[?25h[?25lp:]/,  //this will be ignored.[3;27H[?12l[?25h[?25la:]/,  //this will be ignored.[3;28H[?12l[?25h[?25lc:]/,  //this will be ignored.[3;29H[?12l[?25h[?25le:]/,  //this will be ignored.[3;30H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;30H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/{2}.*[:space:]/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;23H^[:space:]/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/{2}.*^[:space:]/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25lx[?12l[?25h[?25lp[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25lf[?12l[?25h[?25la[?12l[?25h[?25lu[?12l[?25h[?25ll[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l{[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25l[60d[K[3;6H[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;23H[1P[?12l[?25h[?25l[[?12l[?25h[?25l:[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l][?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l$/,  //this will be ignored.[3;22H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/{2}$/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H.$/,  //this will be ignored.[3;22H[?12l[?25h[?25l*$/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ~~~~~~~~~~~~~[K[K[K[K[K[K[K[K[K[K[K[K[K^C[?2004l[?2004h
[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C[16@./lexer.mjs lex3.mjs data.txt[C
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [16Pnano lex3.mjs[C\
[?2004l[?2004h> ^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs \./lexer.mjs lex3.mjs data.txt [15Pnano lex3.mjs \
[?2004l[?2004h> ^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs \
[?2004l[?2004h> [A^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs \[K[K
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\/{2}.*$/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;22H[1P[?12l[?25h[?25l$[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[?12l[?25h[?25l$\\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l\[?12l[?25h[?25ls\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l^\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l\\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l}\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l|\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l{\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l}\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l.\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs \./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}.\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[2;17H[?12l[?25h[?25l[3d[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H*\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}.*\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l+\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^\/{2}.+\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;24H /,  //this will be ignored.[3;25H[?12l[?25h[?25l\/,  //this will be ignored.[60d[K[3;26H[?12l[?25h[?25l[1P[?12l[?25h[?25l^/,  //this will be ignored.[3;26H[?12l[?25h[?25l\/,  //this will be ignored.[3;27H[?12l[?25h[?25l//,  //this will be ignored.[3;28H[?12l[?25h[?25l{/,  //this will be ignored.[3;29H[?12l[?25h[?25l2/,  //this will be ignored.[3;30H[?12l[?25h[?25l}/,  //this will be ignored.[3;31H[?12l[?25h[?25l./,  //this will be ignored.[3;32H[?12l[?25h[?25l+/,  //this will be ignored.[3;33H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+ ^\/{2}.+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H \s+ ^\/{2}.+/,  //this will be ignored.[3;14H[?12l[?25h[?25l^\s+ ^\/{2}.+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l\\s+ ^\/{2}.+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/\s+ ^\/{2}.+/,  //this will be ignored.[3;16H[?12l[?25h[?25l{\s+ ^\/{2}.+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+ ^\/{2}.+/,  //this will be ignored.[3;18H[?12l[?25h[?25l}\s+ ^\/{2}.+/,  //this will be ignored.[3;19H[?12l[?25h[?25l/\s+ ^\/{2}.+/,  //this will be ignored.[3;20H[?12l[?25h[?25l+\s+ ^\/{2}.+/,  //this will be ignored.[3;21H[?12l[?25h[?25l \s+ ^\/{2}.+/,  //this will be ignored.[3;22H[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l^[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;25H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: / \/{2}/+ \s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/{2}/+ \s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l \s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l}[?12l[?25h[?25l/[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid regular expression: /\/{2}+ \s+/: Nothing to repeat
    at file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lex3.mjs:2:12
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:154:23)[39m
[90m    at async Loader.import (node:internal/modules/esm/loader:177:24)[39m
    at async main (file:///home/cmcborr1/projects/i471a/submit/lab1/exercises/regex/lexer.mjs:19:18)
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/{2}+ \s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H^\/{2}+ \s+/,  //this will be ignored.[3;14H[?12l[?25h[?25lp\/{2}+ \s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l[\/{2}+ \s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l] \s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l [?12l[?25h[?25l[1P[60d[K[3;22H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l\]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[60d[K[3;22H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l.]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}.]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lp[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25lf[?12l[?25h[?25la[?12l[?25h[?25lu[?12l[?25h[?25ll[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l[3d[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;20H[1P[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H\]\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25lS]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}+\S]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25lS[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;22H[1P[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}+\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}+\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H.\s]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l*\s]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H.*\s]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*\s]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l+\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;14H[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l{\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l]\s+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[1P[?12l[?25h[?25l}\s+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H^[\/{2}\s+]\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25lx[?12l[?25h[?25l[3d[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs[K[K[K[K[K[K[K[Kdata.txt 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 4 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           data.txt                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2;4H21  23[3;4HA34  _22  ID_44[4;4H// asd sdfs[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano data.txt [1Plex3.mjsdata.txt [1Plex3.mjsdata.txt 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 4 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           data.txt                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2;4H21  23[3;4HA34  _22  ID_44[4;4H// asd sdfs[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano data.txt [1Plex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H^[\/{2}.\s+]\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjsdata.txt [1Plex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/{2}.\s+\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[\/{2}.\s+\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l]\s+\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.]\s+\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[60d[K[3;23H[?12l[?25h[?25l]\s+/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H*.\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}*.\s+]\s+/,  //this will be ignored.[4;3HID: /^[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[4d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[4;15H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l$[A-za-z_][\w]*/,[4;9H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'A'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'I'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'D'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'_'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'a'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'f'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m's'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /$[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[4;8H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4;8H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l[A[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l$\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}$\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l$[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l/\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l.\s+]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[1P[60d[K[3;20H[?12l[?25h[?25l[1P[?12l[?25h[?25l.\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[A[?12l[?25h[?25l[3;20H[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l$]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}$]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l[4d[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l[A[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l.]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l ]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l\]\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}. \s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l.[?12l[?25h[?25l[?12l[?25h[?25l . \s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l\. \s+]\s+/,  //this will be ignored.[60d[K[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l\. \s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l/. \s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\/. \s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/\/.\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/\/.\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/\/\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[\/\/]\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\/.]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l{]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l}]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H ]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l ]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l [?12l[?25h[?25l/]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25lss]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l[1Ps[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l\]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l ]\s+/,  //this will be ignored.[3;24H[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2} \s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l [?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H.\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l*\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;14H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H^[\/*\s+]\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l+\s+]\s+/,  //this will be ignored.[60d[K[3;18H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/+\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[/+\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H\\s+]\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l*\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l(\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l)\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[?12l[?25h[?25l/)\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l//)\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Unexpected token ')'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /(//)\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l([?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H\//)\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Unexpected token ')'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /(\//)\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l([?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P[?12l[?25h[?25l[?12l[?25h[?25l7[3;59r8M[1;62r[3;3H$Ignore: /[4d[12P[?12l[?25h[?25l[4;59r[59;1H
[1;62r[3;13H(//)\s+/,  //this will be ignored.[3;13H[?12l[?25h[?25l\(//)\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Unexpected token ')'
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\(//)\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l([?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l([?12l[?25h[?25l[1P[?12l[?25h[?25l]//)\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[1P[?12l[?25h[?25l[//)\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l/[?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l)[?12l[?25h[?25l[1P[?12l[?25h[?25l]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H\]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P/[?12l[?25h[?25l[1P[?12l[?25h[?25l\\s+]\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25ls\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[1P[?12l[?25h[?25l/\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l?\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/?\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l?[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l?[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l][?12l[?25h[?25l[1P[?12l[?25h[?25l(\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l)\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[?12l[?25h[?25l[)\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25la)\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l=)\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25ls)\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lz)\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l=)\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l=)\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[1P[?12l[?25h[?25l-)\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25lz)\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l])\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l|)\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[)\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25lA)\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l-)\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25lZ)\s+/,  //this will be ignored.[3;24H[?12l[?25h[?25l])\s+/,  //this will be ignored.[3;25H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;25H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /([a-z]|[A-Z])\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l([?12l[?25h[?25l[[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H"([a-z]|[A-Z])\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l""([a-z]|[A-Z])\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[?12l[?25h[?25l/"([a-z]|[A-Z])\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l//"([a-z]|[A-Z])\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid or unexpected token
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /"//"([a-z]|[A-Z])\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l"[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l"[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l[1P/[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l([?12l[?25h[?25l[[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lZ[?12l[?25h[?25l][?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l)[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l)[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l\*(.|[\r\n])*?\*\s+/,  //this will be ignored.[3;29H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;29H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\*(.|[\r\n])*?\*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l([?12l[?25h[?25l.[?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lr[?12l[?25h[?25l\[?12l[?25h[?25ln[?12l[?25h[?25l][?12l[?25h[?25l)[?12l[?25h[?25l[60d[K[3;26H[?12l[?25h[?25l?[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;32H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+/,  //this will be ignored.[3;53H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;53H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[3;79H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;56H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;52H /,  //this will be ignored.[3;53H[?12l[?25h[?25l\/,  //this will be ignored.[3;54H[?12l[?25h[?25l7[4;60r8[4dM[1;62r[3;54H[K[4d/,  //this will be ignored.[?12l[?25h[?25l[4;60r[60;1H
[1;62r[3;54H/,  //this will be ignored.[3;54H[?12l[?25h[?25ls/,  //this will be ignored.[3;55H[?12l[?25h[?25l+/,  //this will be ignored.[3;56H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;56H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+ \s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[2;17H[?12l[?25h[?25l[3d[?12l[?25h[?25l^[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lr[?12l[?25h[?25l\[?12l[?25h[?25ln[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l([?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l+[?12l[?25h[?25l([?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[60d[K[3;40H[?12l[?25h[?25l\[?12l[?25h[?25lr[?12l[?25h[?25l\[?12l[?25h[?25ln[?12l[?25h[?25l][?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;53H[1P[?12l[?25h[?25l7[4;60r8[4dM[1;62r[3;53H[K[4ds+/,  //this will be ignored.[?12l[?25h[?25l[4;60r[60;1H
[1;62r[3;53Hs+/,  //this will be ignored.[3;53H[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[1P[?12l[?25h[?25l/,  //this will be ignored.[3;56H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\s+/,  //this will be ignored.[3;54H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;54H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+ \s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l([?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l*[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lr[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;26H[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l([?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l+[?12l[?25h[?25l([?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l*[?12l[?25h[?25l/[?12l[?25h[?25l][?12l[?25h[?25l|[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25lr[?12l[?25h[?25l\[?12l[?25h[?25ln[?12l[?25h[?25l][?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25l*[?12l[?25h[?25l+[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;55H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P))[?12l[?25h[?25l[1P)[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l /,  //this will be ignored.[3;14H[?12l[?25h[?25l\/,  //this will be ignored.[3;15H[?12l[?25h[?25ls/,  //this will be ignored.[3;16H[?12l[?25h[?25l+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\ \s+/,  //this will be ignored.[3;14H[?12l[?25h[?25ls \s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l+ \s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\s+\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H\\s+\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l/\s+\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l\\s+\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$  [K./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/\\s+\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/\s+\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[\/\s+\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[4d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H{\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l}\s+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l.\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/{2}.\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l+.\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l.[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H*\s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H^[\/+*\s+]\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/+*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l*\s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /^[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25lx[?12l[?25h[?25l[3d[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;13H[1P[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P[?12l[?25h[?25l{\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l2\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l}\s+]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[/{2}\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lp[?12l[?25h[?25l[3d[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H\{2}\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[1P[?12l[?25h[?25l//{2}\s+]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l{\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l2\s+]\s+/,  //this will be ignored.[60d[K[3;18H[?12l[?25h[?25l}\s+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//{2}\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;19H*\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//{2}*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l{[?12l[?25h[?25l2[?12l[?25h[?25l}[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l+*\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//+*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[//]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H ]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l\]\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l\\]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[// \\]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;19H ]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l\]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25ls]\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l+]\s+/,  //this will be ignored.[3;23H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;23H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[// \\ \s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l\[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P\[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1P[?12l[?25h[?25l\/ \s+]\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l*\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/ \s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l[A[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H. \s+]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/. \s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l[A[?12l[?25h[?25l.[?12l[?25h[?25l [?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l [?12l[?25h[?25l*\s+]*\s+/,  //this will be ignored.[60d[K[3;18H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/ *\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[60d[K[3;23H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l.\s+]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*\s+]\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lSyntaxError: Invalid regular expression: missing /
[90m    at Loader.moduleStrategy (node:internal/modules/esm/translators:147:18)[39m
[90m    at async link (node:internal/modules/esm/module_job:48:21)[39m
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H\\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[1P[?12l[?25h[?25l]\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l*\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H\\s+]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25lw\s+]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\w\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l[A[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;22H[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;22H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\w\s+]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H\\s+]\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l\\\s+]\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l[1P\[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;16H[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l.\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+].\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;22H[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l*\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ^C[?2004l[?2004h./lexer.mjs lex3.mjs data.txt ^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs[K[K[K[K[K[K[Kd[K[Kdata.txt 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 4 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           data.txt                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2;4H21  23[3;4HA34  _22  ID_44[4;4H// asd sdfs[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano data.txt [16@./lexer.mjs lex3.mjs[C[C[C[C[C[C[C[C[C[C[17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l.]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjsdata.txt [16@./lexer.mjs lex3.mjs[C[C[C[C[C[C[C[C[C[C
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25l[A[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H//.]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l.[?12l[?25h[?25l/]*\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\//./]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l/[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P/[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16Hw]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[1P[60d[K[3;16H[?12l[?25h[?25l\]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25lw]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\w]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1P[?12l[?25h[?25l.\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25lw].\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/w].\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H//w].\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\//w].\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l/[?12l[?25h[?25lw[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P/[?12l[?25h[?25l\w].\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\w].\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H\].\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25ls].\s+/,  //this will be ignored.[3;20H[?12l[?25h[?25l+].\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;18H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l+\w\s+].\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+\w\s+].\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l.[?12l[?25h[?25l\[?12l[?25h[?25l[60d[K[3;24H[?12l[?25h[?25l[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;23H[1P[?12l[?25h[?25l*\s+/,  //this will be ignored.[3;24H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;24H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/+\w\s+]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l+[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l ]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l.]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l/]*\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/ .]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l [?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l.]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l*]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l$]*\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60d[K[2;17H[?12l[?25h[?25l[3d*$[?12l[?25h[?25l][?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*$]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;20H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;20H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*$]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[3;25H*  //this will be ignored.[3;26H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;26H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*$]\s+/,*  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l/[?12l[?25h[?25l,[?12l[?25h[?25l[60d[K[3;26H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;25H[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*\s+/,  //this will be ignored.[3;21H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*$]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.*$]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l[4d[?12l[?25h[?25l [?12l[?25h[?25lI[?12l[?25h[?25l[A[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/$]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[A[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[60d[K[3;16H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l^\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[?12l[?25h[?25l/]\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l][?12l[?25h[?25l*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l$\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[^/]*$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H\]*$\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25lw]*$\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[1P[?12l[?25h[?25ls]*$\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l+]*$\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[^/\s+]*$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;15H[1P[?12l[?25h[?25l\\s+]*$\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[1P[?12l[?25h[?25l\\s+]*$\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l/\s+]*$\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;15H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[^\/\s+]*$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l^[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;14H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\s+]*$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25l[3d[?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[60d[K[3;26H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H*\s+]*$\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;17H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]*$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;21H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/*\s+]$\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;21H*$\s+/,  //this will be ignored.[3;22H[?12l[?25h[?25l$[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[60d[K[3;20H[?12l[?25h[?25l[?12l[?25h[?25l+[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25l[3d[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l*[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l]]*$\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l[1P[?12l[?25h[?25l\]*$\s+/,  //this will be ignored.[3;15H[?12l[?25h[?25l/]*$\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l$]*$\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l$[?12l[?25h[?25l[1P[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;19H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/$]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H[1P[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m'/'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/$]\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l][?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;18H*\s+/,  //this will be ignored.[3;19H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l*]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/$*]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l*[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l.]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/$.]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l$[?12l[?25h[?25l[?12l[?25h[?25l$[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H[1P[?12l[?25h[?25l.[?12l[?25h[?25l[1P[?12l[?25h[?25l\]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25lW]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\W]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lW[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25lw]*\s+/,  //this will be ignored.[3;18H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;18H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/\w]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25lw[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;17H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l][?12l[?25h[?25l[60d[K[3;16H[?12l[?25h[?25l][?12l[?25h[?25l*[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.*\s+/,  //this will be ignored.[3;16H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;16H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'$err'[39m, lexeme: [32m'\n'[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
Token { kind: [32m'CHAR'[39m, lexeme: [32m' '[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /\/.*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l\[?12l[?25h[?25l/[?12l[?25h[?25l.[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[3;16H]*\s+/,  //this will be ignored.[3;17H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[\/.]*\s+/,  //this will be ignored.[3;14H[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;67H(B[0;7m [116G(B[m[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;14H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt [17Pnano lex3.mjs
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25lI[?12l[?25h[?25lg[?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25l[60;51H (B[0;7m[ Writing... ](B[m[K[1;116H[60;51H(B[0;7m[ Wrote 7 lines ](B[m[3;13H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ^C[?2004l[?2004h[?2004l
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ cd[K[Kcd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls[K[Kcd exercises 
[?2004lbash: cd: exercises: Not a directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls[K[Kls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd lexer/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ a[Knano lexer.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 52 lines ](B[m[H(B[0;7m  GNU nano 5.4                                          lexer.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d[36m#!/usr/bin/env node[4d[39m(B[mimport fs from 'fs';[5dimport Path from 'path';[7d//make changes in this function.[8d// *** It is imperative that each regex starts with a ^ to anchor[9d// the match to the start of the current string. ***[10dfunction scan(text) {[11;3Hconst tokens = [];[12;3Hwhile (text.length > 0) {[13;5Hlet m;  //m[0] will contain lexeme after successful match[14;5Hif ((m = text.match(/^\s+/))) {[15;7H//empty statement to ignore token[16;5H}[17delse if ((m = text.match(/^\d+/))) {[18;7Htokens.push(new Token('INT', m[0]));[19;5H}[20delse {[21;7Hm = text.match(/^./);[22;7Htokens.push(new Token(m[0], m[0]));[23;5H}[24dtext = text.substring(m[0].length);[25;3H}[26dreturn tokens;[27d}[30dconst CHAR_SET = 'utf8';[31dfunction main() {[32;3Hif (process.argv.length !== 3) usage();[33;3Hconst file = process.argv[2];[34;3Hconst text = fs.readFileSync(file, CHAR_SET);[35;3Hfor (const token of scan(text)) {[36;5Hconsole.log(token);[37;3H}[38d}[40dfunction usage() {[41;3Hconst prog = Path.basename(process.argv[1])[42;3Hconsole.error(`usage: ${prog} INPUT_FILE`);[43;3Hprocess.exit(1);[44d}[46dclass Token {[47;3Hconstructor(kind, lexeme) {[48;5HObject.assign(this, {kind, lexeme});[49;3H}[50d}[52dmain();[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.mjs ls[Knano lexer.mjs [K[K[K[Kpy 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 63 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[21;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[22;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[24;4H(B[0;1m[31m #must be last: match any char[25;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[26;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[29d[36mdef[34m scan[39m(B[m(text):[30;5Htokens = [][31;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[33;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[34;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[35;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[36;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[37;9H(B[0;1m[36melse[39m(B[m :[38;12H(B[0;1m[31m #must be last: match any char[39;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[40;13Htokens.append(Token(m.group(), m.group()))[42;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[43;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[44;5H[36mreturn[39m(B[m tokens[46d(B[0;1m[36mdef[34m main[39m(B[m():[47;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[48;5Hcontents = readFile(sys.argv[1]);[49;5Htokens = scan(contents)[50;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[52d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[53;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[54;9Hcontent = file.read()[55;5H(B[0;1m[36mreturn[39m(B[m content[57dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[59d(B[0;1m[36mdef[34m usage[39m(B[m():[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.oy[Kpy[K[Kp[K[K[K.py data.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 63 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[21;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[22;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[24;4H(B[0;1m[31m #must be last: match any char[25;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[26;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[29d[36mdef[34m scan[39m(B[m(text):[30;5Htokens = [][31;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[33;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[34;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[35;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[36;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[37;9H(B[0;1m[36melse[39m(B[m :[38;12H(B[0;1m[31m #must be last: match any char[39;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[40;13Htokens.append(Token(m.group(), m.group()))[42;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[43;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[44;5H[36mreturn[39m(B[m tokens[46d(B[0;1m[36mdef[34m main[39m(B[m():[47;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[48;5Hcontents = readFile(sys.argv[1]);[49;5Htokens = scan(contents)[50;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[52d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[53;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[54;9Hcontent = file.read()[55;5H(B[0;1m[36mreturn[39m(B[m content[57dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[59d(B[0;1m[36mdef[34m usage[39m(B[m():[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[60d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41d[?12l[?25h[?25l[42d[?12l[?25h[?25l[43d[?12l[?25h[?25l[44d[?12l[?25h[?25l[45d[?12l[?25h[?25l[46d[?12l[?25h[?25l[47d[?12l[?25h[?25l[48d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[36;51H[?12l[?25h[?25l[A[?12l[?25h[?25l[34;38H[?12l[?25h[?25l[35;51H[?12l[?25h[?25l[36d[?12l[?25h[?25l[37;15H[?12l[?25h[?25l[36;51H[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[34;38H[?12l[?25h[?25l[33;51H[?12l[?25h[?25l[A[?12l[?25h[?25l[31;27H[?12l[?25h[?25l[30;16H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[26;52H[?12l[?25h[?25l[25;45H[?12l[?25h[?25l[24;34H[?12l[?25h[?25l[A[?12l[?25h[?25l[22;26H[?12l[?25h[?25l[23d[?12l[?25h[?25l[22;26H[?12l[?25h[?25l[23d[?12l[?25h[?25l[22;26H[?12l[?25h[?25l[23d[?12l[?25h[?25l[22;26H[?12l[?25h[?25l[23d[?12l[?25h[?25l[24;34H[?12l[?25h[?25l[A[?12l[?25h[?25l[22;26H[?12l[?25h[?25l[21;47H[?12l[?25h[?25l[A[?12l[?25h[?25l[19;50H[?12l[?25h[?25l[A[?12l[?25h[?25l[17;22H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;59r[18;1HM[1;62r[18;1H[?12l[?25h[?25l[8G[42m[1K [49m(B[m[?12l[?25h[?25l[K[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l    i[?12l[?25h[?25l(B[0;1m[36mif[39m(B[m[?12l[?25h[?25l([?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l ([?12l[?25h[?25lm[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l :[?12l[?25h[?25l=[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l r[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l'[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lz[?12l[?25h[?25l_[?12l[?25h[?25l][?12l[?25h[?25l[18;26H(B[0;1m[32m'[A-za-z_]'[39m(B[m[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l :[?12l[?25h[?25l7[19;60r8[19dM[1;62r[19;1H[?12l[?25h[?25l[8G[42m[1K [49m(B[m[?12l[?25h[?25l[1K r[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25lu[?12l[?25h[?25lr[?12l[?25h[?25l[9G(B[0;1m[36mreturn[39m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l ([?12l[?25h[?25lm[?12l[?25h[?25l,[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l '[?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l(B[0;1m[32m'ID'[39m(B[m[?12l[?25h[?25l_[?12l[?25h[?25l [?12l[?25h[?25l)[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 65 lines ](B[m[19;25H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 17
    if (m := re.compile(r'[A-za-z_]'.match(text)) :
                                                  ^
SyntaxError: invalid syntax
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 65 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m.match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[20;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[23;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[24;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[26;4H(B[0;1m[31m #must be last: match any char[27;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[28;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[31d[36mdef[34m scan[39m(B[m(text):[32;5Htokens = [][33;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[35;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[36;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[37;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[38;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[39;9H(B[0;1m[36melse[39m(B[m :[40;12H(B[0;1m[31m #must be last: match any char[41;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[42;13Htokens.append(Token(m.group(), m.group()))[44;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[45;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[46;5H[36mreturn[39m(B[m tokens[48d(B[0;1m[36mdef[34m main[39m(B[m():[49;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[50;5Hcontents = readFile(sys.argv[1]);[51;5Htokens = scan(contents)[52;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[54d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[55;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[56;9Hcontent = file.read()[57;5H(B[0;1m[36mreturn[39m(B[m content[59dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l[19d[?12l[?25h[?25l[19;9H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[19;16H[?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l[20d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l[C[?12l[?25h[?25l[21d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[A[?12l[?25h[?25l[Ar[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;60r[60;1H
[1;62r[18;1H[?12l[?25h[?25l[18;60r[60;1H
[1;62r[59;1H(B[0;1m[36mdef[34m usage[39m(B[m():[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l7[20;60r8[2T[1;62r[20;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m.match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22d[?12l[?25h[?25l[22;60r[60;1H
[1;62r[21;25H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 64 lines ](B[m[21;25H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 19
    if (m := re.compile(r'[A-za-z_]'.match(text)) :
                                                  ^
SyntaxError: invalid syntax
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C[6@./lexer.py data.txt[C[6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 64 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m.match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[38;9H(B[0;1m[36melse[39m(B[m :[39;12H(B[0;1m[31m #must be last: match any char[40;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[41;13Htokens.append(Token(m.group(), m.group()))[43;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[44;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[45;5H[36mreturn[39m(B[m tokens[47d(B[0;1m[36mdef[34m main[39m(B[m():[48;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[49;5Hcontents = readFile(sys.argv[1]);[50;5Htokens = scan(contents)[51;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[53d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[54;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[55;9Hcontent = file.read()[56;5H(B[0;1m[36mreturn[39m(B[m content[58dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l[60d[K[18d  [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[20;28H[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l[21d[?12l[?25h[?25l[20;52H[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[22;47H[?12l[?25h[?25l[23;26H[?12l[?25h[?25l[24d[?12l[?25h[?25l[25;34H[?12l[?25h[?25l[26;45H[?12l[?25h[?25l[27;52H[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;16H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32;27H[?12l[?25h[?25l[33d[?12l[?25h[?25l[32;27H[?12l[?25h[?25l[31;16H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[27;52H[?12l[?25h[?25l[26;45H[?12l[?25h[?25l[25;34H[?12l[?25h[?25l[A[?12l[?25h[?25l[23;26H[?12l[?25h[?25l[22;47H[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[20;52H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[19;50H[?12l[?25h[?25l[20d :[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[22;47H[?12l[?25h[?25l[23;26H[?12l[?25h[?25l[24d[?12l[?25h[?25l[25;34H[?12l[?25h[?25l[26;45H[?12l[?25h[?25l[27;52H[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;16H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32;27H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34;51H[?12l[?25h[?25l[35;38H[?12l[?25h[?25l[36;52H[?12l[?25h[?25l[37d[?12l[?25h[?25l[38;15H[?12l[?25h[?25l[39;42H[?12l[?25h[?25l[40;45H[?12l[?25h[?25l[41;52H[?12l[?25h[?25l[42d[?12l[?25h[?25l[43;52H[?12l[?25h[?25l[44d[?12l[?25h[?25l[45;18H[?12l[?25h[?25l[46d[?12l[?25h[?25l[47;12H[?12l[?25h[?25l[48;38H[?12l[?25h[?25l[49d[?12l[?25h[?25l[50;28H[?12l[?25h[?25l[51dt)[?12l[?25h[?25l[52d[?12l[?25h[?25l[53;20H[?12l[?25h[?25l[54;34H[?12l[?25h[?25l[55;30H[?12l[?25h[?25l[56;19H[?12l[?25h[?25l[57d[?12l[?25h[?25l[58;48H[?12l[?25h[?25l[59d[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;1H(B[0;1m[36mdef[34m usage[39m(B[m():[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;5Hprint(f(B[0;1m[32m'usage: {sys.argv[0]} DATA_FILE'[39m(B[m)[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;5Hsys.exit(1)[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;1H[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;1H(B[0;1m[36mif[39m(B[m __name__ == (B[0;1m[32m"__main__"[39m(B[m:[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;5Hmain()[?12l[?25h[?25l7[2;60r8[60d
[1;62r[59;1H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[58;11H[?12l[?25h[?25l[57;27H[?12l[?25h[?25l[A[?12l[?25h[?25l[55;16H[?12l[?25h[?25l[54;45H[?12l[?25h[?25l[53;13H[?12l[?25h[?25l[A[?12l[?25h[?25l[51;48H[?12l[?25h[?25l[A[?12l[?25h[?25l[49;19H[?12l[?25h[?25l[48;30H[?12l[?25h[?25l[Aile:[?12l[?25h[?25l[48;30H[?12l[?25h[?25l[49;19H[?12l[?25h[?25l[50d[?12l[?25h[?25l[51;48H[?12l[?25h[?25l[52d[?12l[?25h[?25l[53;13H[?12l[?25h[?25l[54;45H[?12l[?25h[?25l[55;16H[?12l[?25h[?25l[56d[?12l[?25h[?25l[57;27H[?12l[?25h[?25l[58;11H[?12l[?25h[?25l[57;27H[?12l[?25h[?25l[A[?12l[?25h[?25l[55;16H[?12l[?25h[?25l[54;45H[?12l[?25h[?25l[53;13H[?12l[?25h[?25l[A[?12l[?25h[?25l[51;48H[?12l[?25h[?25l[A[?12l[?25h[?25l[49;19H[?12l[?25h[?25l[48;30H[?12l[?25h[?25l[Aile:[?12l[?25h[?25l[46;20H[?12l[?25h[?25l[A[?12l[?25h[?25l[44;30H[?12l[?25h[?25l[A[?12l[?25h[?25l[42;38H[?12l[?25h[?25l[A[?12l[?25h[?25l[40;12H[?12l[?25h[?25l[A[?12l[?25h[?25l[38;18H[?12l[?25h[?25l[37;52H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[34;52H[?12l[?25h[?25l[33;45H[?12l[?25h[?25l[A[?12l[?25h[?25l[31;15H[?12l[?25h[?25l[30;51H[?12l[?25h[?25l[A [?12l[?25h[?25l[28;38H[?12l[?25h[?25l[27;51H[?12l[?25h[?25l[A[?12l[?25h[?25l[25;27H[?12l[?25h[?25l[24;16H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[20;52H[?12l[?25h[?25l[19;45H[?12l[?25h[?25l[18;34H[?12l[?25h[?25l[A[?12l[?25h[?25l[16;26H[?12l[?25h[?25l[15;47H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[14;25H[?12l[?25h[?25l[15;46H[?12l[?25h[?25l[14;25H[?12l[?25h[?25l[13;46H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[13;37H).match(text)) :[13;38H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 64 lines ](B[m[13;38H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 20
    return (m, 'ID')
TabError: inconsistent use of tabs and spaces in indentation
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 64 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[38;9H(B[0;1m[36melse[39m(B[m :[39;12H(B[0;1m[31m #must be last: match any char[40;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[41;13Htokens.append(Token(m.group(), m.group()))[43;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[44;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[45;5H[36mreturn[39m(B[m tokens[47d(B[0;1m[36mdef[34m main[39m(B[m():[48;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[49;5Hcontents = readFile(sys.argv[1]);[50;5Htokens = scan(contents)[51;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[53d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[54;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[55;9Hcontent = file.read()[56;5H(B[0;1m[36mreturn[39m(B[m content[58dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[A[?12l[?25h[?25l[22d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[60d[K[22;5H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[22;44H     ) :[?12l[?25h[?25l[44G) :[K[?12l[?25h[?25l)[?12l[?25h[?25l     :[?12l[?25h[?25l:[K[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[20;45H[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l:[K[?12l[?25h[?25l :[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[20;52H[?12l[?25h[?25l[A[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 64 lines ](B[m[19;50H[?12l[?25h[?25l[A[?12l[?25h[?25l[19;50H[?12l[?25h[?25l[20d) [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[19;50H[?12l[?25h[?25l[20d) [?12l[?25h[?25l[21;25H[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[20;8H[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22;8H[?12l[?25h[?25l[A[?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[21;16H[1K (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[21;9H[?12l[?25h[?25l[8P[?12l[?25h[?25l[21;9H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[21;9H[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[21;9H[?12l[?25h[?25l[8P[?12l[?25h[?25l (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m) [?12l[?25h[?25l  (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)  [?12l[?25h[?25l   (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)   [?12l[?25h[?25l    (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[5G[?12l[?25h[?25l     (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[6G[?12l[?25h[?25l      (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[7G[?12l[?25h[?25l[7G (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[8G[?12l[?25h[?25l[8G (B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[21;9H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 64 lines ](B[m[21;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 64 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[38;9H(B[0;1m[36melse[39m(B[m :[39;12H(B[0;1m[31m #must be last: match any char[40;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[41;13Htokens.append(Token(m.group(), m.group()))[43;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[44;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[45;5H[36mreturn[39m(B[m tokens[47d(B[0;1m[36mdef[34m main[39m(B[m():[48;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[49;5Hcontents = readFile(sys.argv[1]);[50;5Htokens = scan(contents)[51;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[53d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[54;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[55;9Hcontent = file.read()[56;5H(B[0;1m[36mreturn[39m(B[m content[58dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C[6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 64 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[38;9H(B[0;1m[36melse[39m(B[m :[39;12H(B[0;1m[31m #must be last: match any char[40;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[41;13Htokens.append(Token(m.group(), m.group()))[43;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[44;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[45;5H[36mreturn[39m(B[m tokens[47d(B[0;1m[36mdef[34m main[39m(B[m():[48;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[49;5Hcontents = readFile(sys.argv[1]);[50;5Htokens = scan(contents)[51;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[53d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[54;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[55;9Hcontent = file.read()[56;5H(B[0;1m[36mreturn[39m(B[m content[58dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[20;7H[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[20;35H(B[0;1m[32m+]'[39m(B[m).match(text)) :[20;36H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 64 lines ](B[m[20;36H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='A', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='I', lexeme='I')
Token(kind='D', lexeme='D')
Token(kind='_', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='a', lexeme='a')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='s', lexeme='s')
Token(kind='d', lexeme='d')
Token(kind='f', lexeme='f')
Token(kind='s', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 64 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[38;9H(B[0;1m[36melse[39m(B[m :[39;12H(B[0;1m[31m #must be last: match any char[40;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[41;13Htokens.append(Token(m.group(), m.group()))[43;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[44;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[45;5H[36mreturn[39m(B[m tokens[47d(B[0;1m[36mdef[34m main[39m(B[m():[48;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[49;5Hcontents = readFile(sys.argv[1]);[50;5Htokens = scan(contents)[51;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[53d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[54;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[55;9Hcontent = file.read()[56;5H(B[0;1m[36mreturn[39m(B[m content[58dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[60d[K[21;6H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l[22d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25;9H[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;9H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34;9H[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[38;60r[38;1HM[1;62r[38;8H[42m[1K[39d[49m(B[m[8P[?12l[?25h[?25l[8G[1K (B[0;1m[36melse[39m(B[m :[9G[?12l[?25h[?25l[A[?12l[?25h[?25l[1K e[?12l[?25h[?25l;[?12l[?25h[?25lo[?12l[?25h[?25lf[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25l(B[0;1m[36melif[39m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l ([?12l[?25h[?25lm[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l :[?12l[?25h[?25l=[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l r[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l'[?12l[?25h[?25l[38;60r[60;1H
[1;62r[38;1H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l7[36;60r8M[1;62r[37;1H[?12l[?25h[?25l[A[?12l[?25h[?25l7[36;59r8M[1;62r[36;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r'[37d[?12l[?25h[?25l[37;60r[60;1H
[1;62r[59;1HToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[36;33H[?12l[?25h[?25l][?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25lA[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[32;27H[?12l[?25h[?25l[31;16H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[27;35H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[23;26H[?12l[?25h[?25l[22;35H[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[20;35H[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[21;25H[?12l[?25h[?25l[22;35H[?12l[?25h[?25l[23;26H[?12l[?25h[?25l[24d[?12l[?25h[?25l[25;34H[?12l[?25h[?25l[26dc[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;16H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32;27H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34;35H[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l][?12l[?25h[?25l[?12l[?25h[?25l-][?12l[?25h[?25lZ][?12l[?25h[?25la][?12l[?25h[?25l-][?12l[?25h[?25lz][?12l[?25h[?25l_][?12l[?25h[?25l][K[?12l[?25h[?25l_][?12l[?25h[?25l+][?12l[?25h[?25l][?12l[?25h[?25l[36;32H(B[0;1m[32m'[A-Za-z_+]'[39m(B[m[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l a[?12l[?25h[?25l[42m [49m(B[m[K[?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l :[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 65 lines ](B[m[36;60H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ s
[?2004lbash: s: command not found
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd[K[Kgit add .
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ git commit -m"Finished first part of ex1, got part [K[K[K[K[K[K m[Kpartialf[K functionality  for second part of ex1 [K"
[?2004l[lab1 7581f01] Finished first part of ex1, got partial functionality for second part of ex1
 13 files changed, 228 insertions(+)
 create mode 120000 submit/lab1/exercises/01
 create mode 120000 submit/lab1/exercises/02
 create mode 100644 submit/lab1/exercises/exercises
 create mode 120000 submit/lab1/exercises/lexer/data.txt
 create mode 100755 submit/lab1/exercises/lexer/lexer.mjs
 create mode 100755 submit/lab1/exercises/lexer/lexer.py
 create mode 100644 submit/lab1/exercises/regex/data.txt
 create mode 100644 submit/lab1/exercises/regex/lex1.mjs
 create mode 100644 submit/lab1/exercises/regex/lex2.mjs
 create mode 100644 submit/lab1/exercises/regex/lex3.mjs
 create mode 100755 submit/lab1/exercises/regex/lexer.mjs
 create mode 100644 submit/lab1/exercises/regex/table-lexer.mjs
 create mode 100644 submit/lab1/lab1.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ git puh[Ksh 
[?2004lUsername for 'https://github.com': chrs istianmcborrough@gmail.com
Password for 'https://christianmcborrough@gmail.com@github.com': 
Enumerating objects: 22, done.
Counting objects:   4% (1/22)Counting objects:   9% (2/22)Counting objects:  13% (3/22)Counting objects:  18% (4/22)Counting objects:  22% (5/22)Counting objects:  27% (6/22)Counting objects:  31% (7/22)Counting objects:  36% (8/22)Counting objects:  40% (9/22)Counting objects:  45% (10/22)Counting objects:  50% (11/22)Counting objects:  54% (12/22)Counting objects:  59% (13/22)Counting objects:  63% (14/22)Counting objects:  68% (15/22)Counting objects:  72% (16/22)Counting objects:  77% (17/22)Counting objects:  81% (18/22)Counting objects:  86% (19/22)Counting objects:  90% (20/22)Counting objects:  95% (21/22)Counting objects: 100% (22/22)Counting objects: 100% (22/22), done.
Delta compression using up to 8 threads
Compressing objects:   6% (1/15)Compressing objects:  13% (2/15)Compressing objects:  20% (3/15)Compressing objects:  26% (4/15)Compressing objects:  33% (5/15)Compressing objects:  40% (6/15)Compressing objects:  46% (7/15)Compressing objects:  53% (8/15)Compressing objects:  60% (9/15)Compressing objects:  66% (10/15)Compressing objects:  73% (11/15)Compressing objects:  80% (12/15)Compressing objects:  86% (13/15)Compressing objects:  93% (14/15)Compressing objects: 100% (15/15)Compressing objects: 100% (15/15), done.
Writing objects:   5% (1/20)Writing objects:  10% (2/20)Writing objects:  15% (3/20)Writing objects:  20% (4/20)Writing objects:  25% (5/20)Writing objects:  30% (6/20)Writing objects:  35% (7/20)Writing objects:  40% (8/20)Writing objects:  45% (9/20)Writing objects:  50% (10/20)Writing objects:  55% (11/20)Writing objects:  60% (12/20)Writing objects:  65% (13/20)Writing objects:  70% (14/20)Writing objects:  80% (16/20)Writing objects:  85% (17/20)Writing objects:  90% (18/20)Writing objects:  95% (19/20)Writing objects: 100% (20/20)Writing objects: 100% (20/20), 3.70 KiB | 631.00 KiB/s, done.
Total 20 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/3)[Kremote: Resolving deltas:  33% (1/3)[Kremote: Resolving deltas:  66% (2/3)[Kremote: Resolving deltas: 100% (3/3)[Kremote: Resolving deltas: 100% (3/3), completed with 1 local object.[K
To https://github.com/macman926/i471a.git
   7e60d3e..7581f01  lab1 -> lab1
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd lexer/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd[K[Knano e[Klexer.py 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 65 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[38;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[39;9H(B[0;1m[36melse[39m(B[m :[40;12H(B[0;1m[31m #must be last: match any char[41;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[42;13Htokens.append(Token(m.group(), m.group()))[44;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[45;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[46;5H[36mreturn[39m(B[m tokens[48d(B[0;1m[36mdef[34m main[39m(B[m():[49;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[50;5Hcontents = readFile(sys.argv[1]);[51;5Htokens = scan(contents)[52;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[54d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[55;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[56;9Hcontent = file.read()[57;5H(B[0;1m[36mreturn[39m(B[m content[59dToken = namedtuple((B[0;1m[32m'Token'[39m(B[m, [(B[0;1m[32m'kind'[39m(B[m, (B[0;1m[32m'lexeme'[39m(B[m])[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[60d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[36;60H[?12l[?25h[?25l[37;53H[?12l[?25h[?25l[36;60H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[37;59r[37;1HM[1;62r[37;1H[?12l[?25h[?25l[8G[42m[1K [49m(B[m[?12l[?25h[?25l[16G[42m[1K [49m(B[m[?12l[?25h[?25l[37;9H[K[?12l[?25h[?25l[K[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[1K d[?12l[?25h[?25la[?12l[?25h[?25l [?12l[?25h[?25l[42m[1K [49m(B[m [?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[1K d[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[42m[1K [49m(B[m [?12l[?25h[?25l[1K t[?12l[?25h[?25lo[?12l[?25h[?25lk[?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25ls[?12l[?25h[?25l.[?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25ld[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25lT[?12l[?25h[?25lo[?12l[?25h[?25lk[?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25l'[?12l[?25h[?25lI[?12l[?25h[?25lD[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25l(B[0;1m[32m'ID'[39m(B[m[?12l[?25h[?25l,[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l m[?12l[?25h[?25l.[?12l[?25h[?25lg[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25lp[?12l[?25h[?25l([?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[37;50H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py ls[Kcd lexer/
[?2004lbash: cd: lexer/: No such file or directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd lexer/nano lexer.py ls[Kcd lexer/ls[Kgit push commit -m"Finished first part of ex1, got partial functionality for second part of ex1"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd .[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K[1Pscd ..nano lexer.py [6@./lexer.py data.txt[C
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 39
    else :
TabError: inconsistent use of tabs and spaces in indentation
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [11Pcd lexer/nano lexer.py 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[60d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41d[?12l[?25h[?25l[A[?12l[?25h[?25l[40;9H[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[39;51H[?12l[?25h[?25l[40d[?12l[?25h[?25l[40;9H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[40d[8P[?12l[?25h[?25l (B[0;1m[36melse[39m(B[m : [?12l[?25h[?25l  (B[0;1m[36melse[39m(B[m :  [?12l[?25h[?25l   (B[0;1m[36melse[39m(B[m :   [?12l[?25h[?25l    (B[0;1m[36melse[39m(B[m :[5G[?12l[?25h[?25l     (B[0;1m[36melse[39m(B[m :[6G[?12l[?25h[?25l      (B[0;1m[36melse[39m(B[m :[7G[?12l[?25h[?25l[7G (B[0;1m[36melse[39m(B[m :[8G[?12l[?25h[?25l[8G (B[0;1m[36melse[39m(B[m :[9G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[40;9H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$  [Knano lexer.py 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='ID', lexeme='I')
Token(kind='ID', lexeme='D')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='a')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='f')
Token(kind='ID', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [6Pnano lexer.py[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[A[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[17;22H[?12l[?25h[?25l[18d[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[18;28H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;44H ) :[?12l[?25h[?25lo) :[?12l[?25h[?25l(B[0;1m[36mor[39m(B[m) :[?12l[?25h[?25l ) :[?12l[?25h[?25lm) :[?12l[?25h[?25l:) :[?12l[?25h[?25l) :[K[?12l[?25h[?25l ) :[?12l[?25h[?25l:) :[?12l[?25h[?25l=) :[?12l[?25h[?25l ) :[?12l[?25h[?25lr) :[?12l[?25h[?25le) :[?12l[?25h[?25l.) :[?12l[?25h[?25lc) :[?12l[?25h[?25lo) :[?12l[?25h[?25lm) :[?12l[?25h[?25lp) :[?12l[?25h[?25li) :[?12l[?25h[?25ll) :[?12l[?25h[?25le) :[?12l[?25h[?25l() :[?12l[?25h[?25lr) :[?12l[?25h[?25l)) :[?12l[?25h[?25l[?12l[?25h[?25l.)) :[?12l[?25h[?25l)) :[K[?12l[?25h[?25l')) :[?12l[?25h[?25l\)) :[?12l[?25h[?25ls)) :[?12l[?25h[?25l_)) :[?12l[?25h[?25l)) :[K[?12l[?25h[?25l+)) :[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[18;69H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ l[Kls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd e[Kregex/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ cd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd regex/[K[K[K[K[K[Klexer/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd lexer.py 
[?2004lbash: cd: lexer.py: Not a directory
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.x[Ko[Kpy 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text) (B[0;1m[36mor[39m(B[m m := re.compile(r'\s+)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[60d[K[18;9H[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l'[?12l[?25h[?25l\[?12l[?25h[?25ls[?12l[?25h[?25l+[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;68H)) :[K[?12l[?25h[?25l)) :[K[?12l[?25h[?25l)) :[K[?12l[?25h[?25l(B[0;1m[32m''[39m(B[m)) :[?12l[?25h[?25l[?12l[?25h[?25l(B[0;1m[32m['[39m(B[m)) :[67G[?12l[?25h[?25l(B[0;1m[32m]'[39m(B[m)) :[68G[?12l[?25h[?25l[?12l[?25h[?25l(B[0;1m[32m\]'[39m(B[m)) :[68G[?12l[?25h[?25l(B[0;1m[32m/]'[39m(B[m)) :[69G[?12l[?25h[?25l(B[0;1m[32m,]'[39m(B[m)) :[70G[?12l[?25h[?25l[1P[?12l[?25h[?25l(B[0;1m[32m//]'[39m(B[m)) :[70G[?12l[?25h[?25l[1P[C[?12l[?25h[?25l(B[0;1m[32m.]'[39m(B[m)) :[70G[?12l[?25h[?25l[C[?12l[?25h[?25l(B[0;1m[32m*'[39m(B[m)) :[72G[?12l[?25h[?25l[65G'[\/.]*\')) :[73G[?12l[?25h[?25l[18;65H(B[0;1m[32m'[\/.]*\s'[39m(B[m)) :[74G[?12l[?25h[?25l(B[0;1m[32m+'[39m(B[m)) :[75G[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[18;75H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py ls[Kcd lexer.py ls[Kcd lexer/ls[Kcd ..nano lex3.mjs ls[Kcd regex/ls[Kcd regex/ls[Knano lex3.mjs [9Pcd ..[K[K[K[K[K./lexer.py 
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 17
    if (m := re.compile(r'\s+').match(text) or m := re.compile(r'[\/.]*\s+')) :
                                                 ^
SyntaxError: invalid syntax
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py [3@nano [C[C[C[C[C[C[C[C[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text) (B[0;1m[36mor[39m(B[m m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l[60d[K[18;11H[?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;77H.) :[?12l[?25h[?25lm) :[?12l[?25h[?25la) :[?12l[?25h[?25lt) :[?12l[?25h[?25lc) :[?12l[?25h[?25lh) :[?12l[?25h[?25l() :[?12l[?25h[?25lt) :[?12l[?25h[?25le) :[?12l[?25h[?25lx) :[?12l[?25h[?25lt) :[?12l[?25h[?25l)) :[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[18;89H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [3P./[C[C[C[C[C[C[C[C[C[3@nano [C[C[C[C[C[C[C[C[C[3P./[C[C[C[C[C[C[C[C[C
[?2004l  File "/home/cmcborr1/projects/i471a/submit/lab1/exercises/lexer/./lexer.py", line 17
    if (m := re.compile(r'\s+').match(text) or m := re.compile(r'[\/.]*\s+').match(text)) :
                                                 ^
SyntaxError: invalid syntax
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py [3@nano [C[C[C[C[C[C[C[C[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text) (B[0;1m[36mor[39m(B[m m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[16;13H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[17d[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l:[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;43H)) (B[0;1m[36mor[39m(B[m m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) :[18;45H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l((m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) :[18;10H[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25l[?12l[?25h[?25l(m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) :[18;51H[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l))) :[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[18;93H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [3P./[C[C[C[C[C[C[C[C[C
[?2004lusage: ./lexer.py DATA_FILE
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py da[K[Kdata.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='ID', lexeme='I')
Token(kind='ID', lexeme='D')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='a')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='f')
Token(kind='ID', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py data.txt [K[3@nano [C[C[C[C[C[C[C[C[C
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py [6@./lexer.py data.txt[C[6Pnano lexer.py[C[Kcd 
[?2004l[?2004hcmcborr1@remote02:~$ cd [Kcd[Kd ~/i471a/submit//l[K[Klab1/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ ls
[?2004lexercises  lab1.LOG
[?2004hcmcborr1@remote02:~/i471a/submit/lab1$ cd[K[Kcd exercises/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd lexer/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd[K[Kcd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd regex/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ls
[?2004ldata.txt  lex1.mjs  lex2.mjs  lex3.mjs	lexer.mjs  table-lexer.mjs
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt 
[?2004lToken { kind: [32m'INT'[39m, lexeme: [32m'21'[39m }
Token { kind: [32m'INT'[39m, lexeme: [32m'23'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'A34'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'_22'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'ID_44'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'asd'[39m }
Token { kind: [32m'ID'[39m, lexeme: [32m'sdfs'[39m }
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ ./lexer.mjs lex3.mjs data.txt ls[K./lexer.mjs lex3.mjs data.txt [C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Knano lex3.mjs 
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 7 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lex3.mjs                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2dexport default {[3;3H$Ignore: /[\/.]*\s+/,  //this will be ignored.[4;3HID: /[A-za-z_][\w]*/,[5;3HINT: /\d+/,[20G//token with kind INT[6;3HCHAR: /./,[20G//single char: must be last;[7;20H// /./ is a regex which matches any char other than '\n'[8d};[2d[?12l[?25h[?25l[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/regex$ nano lex3.mjs [16@./lexer.mjs lex3.mjs data.txt[C[16Pnano lex3.mjs[C[Kcd ..
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$  ls
[?2004l01  02	exercises  lexer  regex
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises$ cd re[K[Klexer/
[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ls
[?2004ldata.txt  lexer.mjs  lexer.py
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ cd[K[Knano lexer.py
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[60d[K[28d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[61d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.pyls[Kcd lexer/[6P ls=[K[K[K[K./lexer.mjs [K[K[K[K[K[K[K[K[Kexer.py  data.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='ID', lexeme='I')
Token(kind='ID', lexeme='D')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='a')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='f')
Token(kind='ID', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py  data.txt [8Pnano lexer.py
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[16;13H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[A[?12l[?25h[?25l[16d[?12l[?25h[?25l[17;22H[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[60;30H(B[0;7m[ line 17/67 (25%), col 28/96 (29%), char 556/2071 (26%) ](B[m[18;28H[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[18;27H\s+(B[0;1m[32m').match(text)) or (m := re.compile(r'[39m(B[m[\/.]*\s+'[1P[18;27H[?12l[?25h[?25l[60;49H[1K (B[0;7m[ Undid deletion ](B[m[K[1;67H(B[0;7m [116G(B[m[18;27H(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text))) :[18;28H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l([?12l[?25h[?25l[1;67H(B[0;7m*[60d(B[m[K[1;116H[18;28H(B[0;1m[32m[\/.]*\s+'[39m(B[m).match(text))(m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.][39m(B[0;7m>[18;52H(B[m[?12l[?25h[?25lo(m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/.[18;53H[39m(B[m[?12l[?25h[?25l(B[0;1m[36mor[39m(B[m(m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\/[18;54H[39m(B[m[?12l[?25h[?25l (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[\[18;55H[39m(B[m[?12l[?25h[?25l([?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'[[18;53H[39m(B[m[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l(B[0;7m<(B[mle(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text))) :[K[7G[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l.[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l[6G'[\/.]*\s+) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l    (B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r) :[18;115H[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25lo) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l) :[K[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[18;93H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py./lexer.py  data.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='ID', lexeme='I')
Token(kind='ID', lexeme='D')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='a')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='f')
Token(kind='ID', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py  data.txt [8Pnano lexer.py
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+]'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[20;7H[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[20;37H(B[0;1m[32m['[39m(B[m).match(text)) :[20;38H[?12l[?25h[?25l[20;26H'[A-za-z_+][\').match(text)) :[20;39H[?12l[?25h[?25l[20;26H(B[0;1m[32m'[A-za-z_+][\w'[39m(B[m).match(text)) :[20;40H[?12l[?25h[?25l(B[0;1m[32m]'[39m(B[m).match(text)) :[20;41H[?12l[?25h[?25l(B[0;1m[32m*'[39m(B[m).match(text)) :[20;42H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[20;42H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py./lexer.py  data.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A')
Token(kind='INT', lexeme='34')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='22')
Token(kind='ID', lexeme='I')
Token(kind='ID', lexeme='D')
Token(kind='ID', lexeme='_')
Token(kind='INT', lexeme='44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='a')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='s')
Token(kind='ID', lexeme='d')
Token(kind='ID', lexeme='f')
Token(kind='ID', lexeme='s')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py  data.txt [8Pnano lexer.py
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+][\w]*'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+]'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[60d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l([?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l([?12l[?25h[?25lr[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;67H(B[0;7m*[116G(B[m[36;43H(B[0;1m[32m['[39m(B[m).match(text)) :[36;44H[?12l[?25h[?25l[36;32H'[A-Za-z_+][\').match(text)) :[36;45H[?12l[?25h[?25l[36;32H(B[0;1m[32m'[A-Za-z_+][\w'[39m(B[m).match(text)) :[36;46H[?12l[?25h[?25l(B[0;1m[32m]'[39m(B[m).match(text)) :[36;47H[?12l[?25h[?25l(B[0;1m[32m*'[39m(B[m).match(text)) :[36;48H[?12l[?25h[?25l[60;52H(B[0;7m[ Writing... ](B[m[1;67H(B[0;7m [116G(B[m[60;50H(B[0;7m[ Wrote 66 lines ](B[m[36;48H[?12l[?25h[?25l[60d[J[62d[?12l[?25h[62;1H[?1049l[23;0;0t[?1l>[?2004l[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ nano lexer.py./lexer.py  data.txt 
[?2004lToken(kind='INT', lexeme='21')
Token(kind='INT', lexeme='23')
Token(kind='ID', lexeme='A34')
Token(kind='ID', lexeme='_22')
Token(kind='ID', lexeme='ID_44')
Token(kind='/', lexeme='/')
Token(kind='/', lexeme='/')
Token(kind='ID', lexeme='asd')
Token(kind='ID', lexeme='sdfs')
[?2004hcmcborr1@remote02:~/i471a/submit/lab1/exercises/lexer$ ./lexer.py  data.txt [8Pnano lexer.py
[?2004l[?2004h[?1049h[22;0;0t[1;62r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[60;52H(B[0;7m[ Reading... ](B[m[60;51H(B[0;7m[ Read 66 lines ](B[m[H(B[0;7m  GNU nano 5.4                                           lexer.py                                                    [1;116H(B[m[61d(B[0;7m^G(B[m Help[61;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[61;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[62d(B[0;7m^X(B[m Exit[62;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[62;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[2d(B[0;1m[31m#!/usr/bin/env python3[4d[36mimport[39m(B[m re[5d(B[0;1m[36mimport[39m(B[m sys[6d(B[0;1m[36mfrom[39m(B[m collections (B[0;1m[36mimport[39m(B[m namedtuple[8d(B[0;1m[31m#The next_match() function uses the `:=` walrus operator recently[9d#introduced in Python 3.8.  In fact, this kind of use is precisely the[10d#rationale provided in the PEP.[11d#<https://www.python.org/dev/peps/pep-0572/#the-importance-of-real-code>[14d#returns pair containing regex match-object and token kind.  If token[15d#should be ignored, kind should be returned as None.[16d#note that m.group() gives lexeme after a successful match[17d[36mdef[34m next_match[39m(B[m(text):[18;5H(B[0;1m[36mif[39m(B[m ((m := re.compile(r(B[0;1m[32m'[\/.]*\s+'[39m(B[m).match(text)) (B[0;1m[36mor[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text))) :[19;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[35mNone[39m(B[m) (B[0;1m[31m #None kind means ignore[20;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-za-z_+][\w]*'[39m(B[m).match(text)) :[21;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'ID'[39m(B[m)[22;5H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[23;9H(B[0;1m[36mreturn[39m(B[m (m, (B[0;1m[32m'INT'[39m(B[m)[25;4H(B[0;1m[31m #must be last: match any char[26;5H[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)) :[27;9H(B[0;1m[36mreturn[39m(B[m (m, m.group())(B[0;1m[31m #m.group() returns matching text: the single char[30d[36mdef[34m scan[39m(B[m(text):[31;5Htokens = [][32;5H(B[0;1m[36mwhile[39m(B[m (len(text) > 0):[34;9H(B[0;1m[36mif[39m(B[m (m := re.compile(r(B[0;1m[32m'\s+'[39m(B[m).match(text)) :[35;13H(B[0;1m[36mpass[39m(B[m (B[0;1m[31m # ignore whitespace[36;9H[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'[A-Za-z_+][\w]*'[39m(B[m).match(text)) :[37;13Htokens.append(Token((B[0;1m[32m'ID'[39m(B[m, m.group()))[38;9H(B[0;1m[36melif[39m(B[m (m := re.compile(r(B[0;1m[32m'\d+'[39m(B[m).match(text)) :[39;13Htokens.append(Token((B[0;1m[32m'INT'[39m(B[m, m.group()))[40;9H(B[0;1m[36melse[39m(B[m :[41;12H(B[0;1m[31m #must be last: match any char[42;13H[39m(B[mm = re.compile(r(B[0;1m[32m'.'[39m(B[m).match(text)[43;13Htokens.append(Token(m.group(), m.group()))[45;9Hlexeme = m.group()(B[0;1m[31m #m.group() provides the matching text[46;9H[39m(B[mtext = text[len(lexeme):](B[0;1m[31m #remove lexeme prefix of text[47;5H[36mreturn[39m(B[m tokens[49d(B[0;1m[36mdef[34m main[39m(B[m():[50;5H(B[0;1m[36mif[39m(B[m (len(sys.argv) != 2): usage();[51;5Hcontents = readFile(sys.argv[1]);[52;5Htokens = scan(contents)[53;5H(B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m tokens: print(t)[55d(B[0;1m[36mdef[34m readFile[39m(B[m(path):[56;5H(B[0;1m[36mwith[39m(B[m open(path, (B[0;1m[32m'r'[39m(B[m) (B[0;1m[36mas[39m(B[m file:[57;9Hcontent = file.read()[58;5H(B[0;1m[36mreturn[39m(B[m content[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[60d[K[17;6H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l([?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l)[?12l[?25h[?25l:[?12l[?25h[?25l[18d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h